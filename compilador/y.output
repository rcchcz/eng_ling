Terminals unused in grammar

    COMMENT


Grammar

    0 $accept: prog $end

    1 prog: stmlist

    2 stmlist: stm SEMICOLON
    3        | stm SEMICOLON stmlist

    4 stm: funcdef
    5    | structdef
    6    | decl
    7    | assignment
    8    | expr
    9    | if
   10    | while
   11    | for
   12    | break
   13    | return
   14    | str_copy
   15    | in
   16    | out
   17    | open
   18    | close

   19 body: BRACES_INITIATOR stmlist BRACES_TERMINATOR

   20 funcdef: DEF field PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR body

   21 structdef: STRUCT ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR

   22 paramlist: param
   23          | param COMMA paramlist

   24 param: ε
   25      | field

   26 fieldlist: field SEMICOLON
   27          | field SEMICOLON fieldlist

   28 field: TYPE ID
   29      | ARRAY LESS_THAN TYPE GREATER_THAN ID
   30      | ID ID

   31 decl: TYPE idlist
   32     | struct_decl
   33     | tuple_decl
   34     | array_decl

   35 idlist: decl_elem
   36       | decl_elem COMMA idlist

   37 decl_elem: ID
   38          | assignment

   39 assignment: ID ASSIGN expr
   40           | ID ASSIGN in

   41 struct_decl: STRUCT ID ID
   42            | STRUCT ID ID ASSIGN construct

   43 construct: BRACES_INITIATOR exprlist BRACES_TERMINATOR

   44 tuple_decl: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

   45 types: TYPE
   46      | TYPE COMMA types

   47 exprlist: expr
   48         | exprlist COMMA expr

   49 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID BRACKETS_INITIATOR expr BRACKETS_TERMINATOR
   50           | ARRAY LESS_THAN TYPE GREATER_THAN ID ASSIGN construct

   51 expr: val
   52     | len
   53     | expr PLUS_OPERATOR expr
   54     | expr MINUS_OPERATOR expr
   55     | expr MULTI_OPERATOR expr
   56     | expr DIVISION_OPERATOR expr
   57     | expr MOD_OPERATOR expr
   58     | expr POWER_OPERATOR expr
   59     | expr CONCAT expr
   60     | expr EQUAL expr
   61     | expr NOT_EQUAL expr
   62     | expr LEQ expr
   63     | expr GEQ expr
   64     | expr LESS_THAN expr
   65     | expr GREATER_THAN expr
   66     | NOT expr
   67     | expr AND expr
   68     | expr OR expr
   69     | PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR
   70     | attrlist

   71 attrlist: ID SEPARATOR ID
   72         | ID SEPARATOR attrlist

   73 val: ID
   74    | VALUE

   75 if: IF expr body if_opt

   76 if_opt: elif_opt else_opt

   77 elif_opt: ε
   78         | ELIF expr body elif_opt

   79 else_opt: ε
   80         | ELSE body

   81 while: WHILE expr body

   82 for: FOR PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR body

   83 init: TYPE ID ITERATOR range

   84 range: BRACKETS_INITIATOR expr COMMA expr BRACKETS_TERMINATOR
   85      | ID

   86 return: RETURN expr

   87 break: BREAK

   88 str_copy: ID COPY_STRING expr

   89 in: IN PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

   90 out: OUT expr

   91 open: OPEN PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

   92 close: CLOSE PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

   93 len: LEN_STRING PARENTHESES_INITIATOR VALUE PARENTHESES_TERMINATOR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sValue> (258) 21 28 29 30 37 39 40 41 42 44 49 50 71 72 73 83 85 88
    TYPE <sValue> (259) 28 29 31 45 46 49 50 83
    VALUE <sValue> (260) 74 93
    LEN_STRING <sValue> (261) 93
    ASSIGN (262) 39 40 42 44 50
    COMMENT (263)
    COMMA (264) 23 36 46 48 84
    SEMICOLON (265) 2 3 26 27
    SEPARATOR (266) 71 72
    DEF (267) 20
    ARRAY (268) 29 49 50
    STRUCT (269) 21 41 42
    TUPLE (270) 44
    WHILE (271) 81
    FOR (272) 82
    ITERATOR (273) 83
    IF (274) 75
    ELSE (275) 80
    ELIF (276) 78
    BREAK (277) 87
    RETURN (278) 86
    BRACES_INITIATOR (279) 19 21 43
    BRACES_TERMINATOR (280) 19 21 43
    BRACKETS_INITIATOR (281) 49 84
    BRACKETS_TERMINATOR (282) 49 84
    PARENTHESES_INITIATOR (283) 20 44 69 82 89 91 92 93
    PARENTHESES_TERMINATOR (284) 20 44 69 82 89 91 92 93
    IN (285) 89
    OUT (286) 90
    OPEN (287) 91
    CLOSE (288) 92
    EQUAL (289) 60
    NOT_EQUAL (290) 61
    LEQ (291) 62
    GEQ (292) 63
    GREATER_THAN (293) 29 49 50 65
    LESS_THAN (294) 29 49 50 64
    NOT (295) 66
    AND (296) 67
    OR (297) 68
    PLUS_OPERATOR (298) 53
    MINUS_OPERATOR (299) 54
    MULTI_OPERATOR (300) 55
    DIVISION_OPERATOR (301) 56
    MOD_OPERATOR (302) 57
    POWER_OPERATOR (303) 58
    CONCAT (304) 59
    COPY_STRING (305) 88


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    prog <sValue> (52)
        on left: 1
        on right: 0
    stmlist <sValue> (53)
        on left: 2 3
        on right: 1 3 19
    stm <sValue> (54)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
        on right: 2 3
    body (55)
        on left: 19
        on right: 20 75 78 80 81 82
    funcdef (56)
        on left: 20
        on right: 4
    structdef (57)
        on left: 21
        on right: 5
    paramlist (58)
        on left: 22 23
        on right: 20 23
    param (59)
        on left: 24 25
        on right: 22 23
    fieldlist (60)
        on left: 26 27
        on right: 21 27
    field (61)
        on left: 28 29 30
        on right: 20 25 26 27
    decl (62)
        on left: 31 32 33 34
        on right: 6
    idlist (63)
        on left: 35 36
        on right: 31 36
    decl_elem (64)
        on left: 37 38
        on right: 35 36
    assignment (65)
        on left: 39 40
        on right: 7 38
    struct_decl (66)
        on left: 41 42
        on right: 32
    construct (67)
        on left: 43
        on right: 42 50
    tuple_decl (68)
        on left: 44
        on right: 33
    types (69)
        on left: 45 46
        on right: 44 46
    exprlist (70)
        on left: 47 48
        on right: 43 44 48
    array_decl (71)
        on left: 49 50
        on right: 34
    expr (72)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
        on right: 8 39 47 48 49 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 75 78 81 84 86 88 90
    attrlist (73)
        on left: 71 72
        on right: 70 72
    val (74)
        on left: 73 74
        on right: 51 89 91 92
    if (75)
        on left: 75
        on right: 9
    if_opt (76)
        on left: 76
        on right: 75
    elif_opt (77)
        on left: 77 78
        on right: 76 78
    else_opt (78)
        on left: 79 80
        on right: 76
    while (79)
        on left: 81
        on right: 10
    for (80)
        on left: 82
        on right: 11
    init (81)
        on left: 83
        on right: 82
    range (82)
        on left: 84 85
        on right: 83
    return (83)
        on left: 86
        on right: 13
    break (84)
        on left: 87
        on right: 12
    str_copy (85)
        on left: 88
        on right: 14
    in (86)
        on left: 89
        on right: 15 40
    out (87)
        on left: 90
        on right: 16
    open (88)
        on left: 91
        on right: 17
    close (89)
        on left: 92
        on right: 18
    len (90)
        on left: 93
        on right: 52


State 0

    0 $accept: • prog $end

    ID                     shift, and go to state 1
    TYPE                   shift, and go to state 2
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    DEF                    shift, and go to state 5
    ARRAY                  shift, and go to state 6
    STRUCT                 shift, and go to state 7
    TUPLE                  shift, and go to state 8
    WHILE                  shift, and go to state 9
    FOR                    shift, and go to state 10
    IF                     shift, and go to state 11
    BREAK                  shift, and go to state 12
    RETURN                 shift, and go to state 13
    PARENTHESES_INITIATOR  shift, and go to state 14
    IN                     shift, and go to state 15
    OUT                    shift, and go to state 16
    OPEN                   shift, and go to state 17
    CLOSE                  shift, and go to state 18
    NOT                    shift, and go to state 19

    prog         go to state 20
    stmlist      go to state 21
    stm          go to state 22
    funcdef      go to state 23
    structdef    go to state 24
    decl         go to state 25
    assignment   go to state 26
    struct_decl  go to state 27
    tuple_decl   go to state 28
    array_decl   go to state 29
    expr         go to state 30
    attrlist     go to state 31
    val          go to state 32
    if           go to state 33
    while        go to state 34
    for          go to state 35
    return       go to state 36
    break        go to state 37
    str_copy     go to state 38
    in           go to state 39
    out          go to state 40
    open         go to state 41
    close        go to state 42
    len          go to state 43


State 1

   39 assignment: ID • ASSIGN expr
   40           | ID • ASSIGN in
   71 attrlist: ID • SEPARATOR ID
   72         | ID • SEPARATOR attrlist
   73 val: ID •
   88 str_copy: ID • COPY_STRING expr

    ASSIGN       shift, and go to state 44
    SEPARATOR    shift, and go to state 45
    COPY_STRING  shift, and go to state 46

    $default  reduce using rule 73 (val)


State 2

   31 decl: TYPE • idlist

    ID  shift, and go to state 47

    idlist      go to state 48
    decl_elem   go to state 49
    assignment  go to state 50


State 3

   74 val: VALUE •

    $default  reduce using rule 74 (val)


State 4

   93 len: LEN_STRING • PARENTHESES_INITIATOR VALUE PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 51


State 5

   20 funcdef: DEF • field PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR body

    ID     shift, and go to state 52
    TYPE   shift, and go to state 53
    ARRAY  shift, and go to state 54

    field  go to state 55


State 6

   49 array_decl: ARRAY • LESS_THAN TYPE GREATER_THAN ID BRACKETS_INITIATOR expr BRACKETS_TERMINATOR
   50           | ARRAY • LESS_THAN TYPE GREATER_THAN ID ASSIGN construct

    LESS_THAN  shift, and go to state 56


State 7

   21 structdef: STRUCT • ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR
   41 struct_decl: STRUCT • ID ID
   42            | STRUCT • ID ID ASSIGN construct

    ID  shift, and go to state 57


State 8

   44 tuple_decl: TUPLE • PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 58


State 9

   81 while: WHILE • expr body

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 60
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 10

   82 for: FOR • PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR body

    PARENTHESES_INITIATOR  shift, and go to state 61


State 11

   75 if: IF • expr body if_opt

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 62
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 12

   87 break: BREAK •

    $default  reduce using rule 87 (break)


State 13

   86 return: RETURN • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 63
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 14

   69 expr: PARENTHESES_INITIATOR • expr PARENTHESES_TERMINATOR

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 64
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 15

   89 in: IN • PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 65


State 16

   90 out: OUT • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 66
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 17

   91 open: OPEN • PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 67


State 18

   92 close: CLOSE • PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 68


State 19

   66 expr: NOT • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 69
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 20

    0 $accept: prog • $end

    $end  shift, and go to state 70


State 21

    1 prog: stmlist •

    $default  reduce using rule 1 (prog)


State 22

    2 stmlist: stm • SEMICOLON
    3        | stm • SEMICOLON stmlist

    SEMICOLON  shift, and go to state 71


State 23

    4 stm: funcdef •

    $default  reduce using rule 4 (stm)


State 24

    5 stm: structdef •

    $default  reduce using rule 5 (stm)


State 25

    6 stm: decl •

    $default  reduce using rule 6 (stm)


State 26

    7 stm: assignment •

    $default  reduce using rule 7 (stm)


State 27

   32 decl: struct_decl •

    $default  reduce using rule 32 (decl)


State 28

   33 decl: tuple_decl •

    $default  reduce using rule 33 (decl)


State 29

   34 decl: array_decl •

    $default  reduce using rule 34 (decl)


State 30

    8 stm: expr •
   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    LEQ                shift, and go to state 74
    GEQ                shift, and go to state 75
    GREATER_THAN       shift, and go to state 76
    LESS_THAN          shift, and go to state 77
    AND                shift, and go to state 78
    OR                 shift, and go to state 79
    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    $default  reduce using rule 8 (stm)


State 31

   70 expr: attrlist •

    $default  reduce using rule 70 (expr)


State 32

   51 expr: val •

    $default  reduce using rule 51 (expr)


State 33

    9 stm: if •

    $default  reduce using rule 9 (stm)


State 34

   10 stm: while •

    $default  reduce using rule 10 (stm)


State 35

   11 stm: for •

    $default  reduce using rule 11 (stm)


State 36

   13 stm: return •

    $default  reduce using rule 13 (stm)


State 37

   12 stm: break •

    $default  reduce using rule 12 (stm)


State 38

   14 stm: str_copy •

    $default  reduce using rule 14 (stm)


State 39

   15 stm: in •

    $default  reduce using rule 15 (stm)


State 40

   16 stm: out •

    $default  reduce using rule 16 (stm)


State 41

   17 stm: open •

    $default  reduce using rule 17 (stm)


State 42

   18 stm: close •

    $default  reduce using rule 18 (stm)


State 43

   52 expr: len •

    $default  reduce using rule 52 (expr)


State 44

   39 assignment: ID ASSIGN • expr
   40           | ID ASSIGN • in

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    IN                     shift, and go to state 15
    NOT                    shift, and go to state 19

    expr      go to state 87
    attrlist  go to state 31
    val       go to state 32
    in        go to state 88
    len       go to state 43


State 45

   71 attrlist: ID SEPARATOR • ID
   72         | ID SEPARATOR • attrlist

    ID  shift, and go to state 89

    attrlist  go to state 90


State 46

   88 str_copy: ID COPY_STRING • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 91
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 47

   37 decl_elem: ID •
   39 assignment: ID • ASSIGN expr
   40           | ID • ASSIGN in

    ASSIGN  shift, and go to state 44

    $default  reduce using rule 37 (decl_elem)


State 48

   31 decl: TYPE idlist •

    $default  reduce using rule 31 (decl)


State 49

   35 idlist: decl_elem •
   36       | decl_elem • COMMA idlist

    COMMA  shift, and go to state 92

    $default  reduce using rule 35 (idlist)


State 50

   38 decl_elem: assignment •

    $default  reduce using rule 38 (decl_elem)


State 51

   93 len: LEN_STRING PARENTHESES_INITIATOR • VALUE PARENTHESES_TERMINATOR

    VALUE  shift, and go to state 93


State 52

   30 field: ID • ID

    ID  shift, and go to state 94


State 53

   28 field: TYPE • ID

    ID  shift, and go to state 95


State 54

   29 field: ARRAY • LESS_THAN TYPE GREATER_THAN ID

    LESS_THAN  shift, and go to state 96


State 55

   20 funcdef: DEF field • PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR body

    PARENTHESES_INITIATOR  shift, and go to state 97


State 56

   49 array_decl: ARRAY LESS_THAN • TYPE GREATER_THAN ID BRACKETS_INITIATOR expr BRACKETS_TERMINATOR
   50           | ARRAY LESS_THAN • TYPE GREATER_THAN ID ASSIGN construct

    TYPE  shift, and go to state 98


State 57

   21 structdef: STRUCT ID • BRACES_INITIATOR fieldlist BRACES_TERMINATOR
   41 struct_decl: STRUCT ID • ID
   42            | STRUCT ID • ID ASSIGN construct

    ID                shift, and go to state 99
    BRACES_INITIATOR  shift, and go to state 100


State 58

   44 tuple_decl: TUPLE PARENTHESES_INITIATOR • types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    TYPE  shift, and go to state 101

    types  go to state 102


State 59

   71 attrlist: ID • SEPARATOR ID
   72         | ID • SEPARATOR attrlist
   73 val: ID •

    SEPARATOR  shift, and go to state 45

    $default  reduce using rule 73 (val)


State 60

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr
   81 while: WHILE expr • body

    BRACES_INITIATOR   shift, and go to state 103
    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    LEQ                shift, and go to state 74
    GEQ                shift, and go to state 75
    GREATER_THAN       shift, and go to state 76
    LESS_THAN          shift, and go to state 77
    AND                shift, and go to state 78
    OR                 shift, and go to state 79
    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    body  go to state 104


State 61

   82 for: FOR PARENTHESES_INITIATOR • init PARENTHESES_TERMINATOR body

    TYPE  shift, and go to state 105

    init  go to state 106


State 62

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr
   75 if: IF expr • body if_opt

    BRACES_INITIATOR   shift, and go to state 103
    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    LEQ                shift, and go to state 74
    GEQ                shift, and go to state 75
    GREATER_THAN       shift, and go to state 76
    LESS_THAN          shift, and go to state 77
    AND                shift, and go to state 78
    OR                 shift, and go to state 79
    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    body  go to state 107


State 63

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr
   86 return: RETURN expr •

    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    LEQ                shift, and go to state 74
    GEQ                shift, and go to state 75
    GREATER_THAN       shift, and go to state 76
    LESS_THAN          shift, and go to state 77
    AND                shift, and go to state 78
    OR                 shift, and go to state 79
    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    $default  reduce using rule 86 (return)


State 64

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr
   69     | PARENTHESES_INITIATOR expr • PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 108
    EQUAL                   shift, and go to state 72
    NOT_EQUAL               shift, and go to state 73
    LEQ                     shift, and go to state 74
    GEQ                     shift, and go to state 75
    GREATER_THAN            shift, and go to state 76
    LESS_THAN               shift, and go to state 77
    AND                     shift, and go to state 78
    OR                      shift, and go to state 79
    PLUS_OPERATOR           shift, and go to state 80
    MINUS_OPERATOR          shift, and go to state 81
    MULTI_OPERATOR          shift, and go to state 82
    DIVISION_OPERATOR       shift, and go to state 83
    MOD_OPERATOR            shift, and go to state 84
    POWER_OPERATOR          shift, and go to state 85
    CONCAT                  shift, and go to state 86


State 65

   89 in: IN PARENTHESES_INITIATOR • val PARENTHESES_TERMINATOR

    ID     shift, and go to state 109
    VALUE  shift, and go to state 3

    val  go to state 110


State 66

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr
   90 out: OUT expr •

    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    LEQ                shift, and go to state 74
    GEQ                shift, and go to state 75
    GREATER_THAN       shift, and go to state 76
    LESS_THAN          shift, and go to state 77
    AND                shift, and go to state 78
    OR                 shift, and go to state 79
    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    $default  reduce using rule 90 (out)


State 67

   91 open: OPEN PARENTHESES_INITIATOR • val PARENTHESES_TERMINATOR

    ID     shift, and go to state 109
    VALUE  shift, and go to state 3

    val  go to state 111


State 68

   92 close: CLOSE PARENTHESES_INITIATOR • val PARENTHESES_TERMINATOR

    ID     shift, and go to state 109
    VALUE  shift, and go to state 3

    val  go to state 112


State 69

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   66     | NOT expr •
   67     | expr • AND expr
   68     | expr • OR expr

    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    LEQ                shift, and go to state 74
    GEQ                shift, and go to state 75
    GREATER_THAN       shift, and go to state 76
    LESS_THAN          shift, and go to state 77
    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    $default  reduce using rule 66 (expr)


State 70

    0 $accept: prog $end •

    $default  accept


State 71

    2 stmlist: stm SEMICOLON •
    3        | stm SEMICOLON • stmlist

    ID                     shift, and go to state 1
    TYPE                   shift, and go to state 2
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    DEF                    shift, and go to state 5
    ARRAY                  shift, and go to state 6
    STRUCT                 shift, and go to state 7
    TUPLE                  shift, and go to state 8
    WHILE                  shift, and go to state 9
    FOR                    shift, and go to state 10
    IF                     shift, and go to state 11
    BREAK                  shift, and go to state 12
    RETURN                 shift, and go to state 13
    PARENTHESES_INITIATOR  shift, and go to state 14
    IN                     shift, and go to state 15
    OUT                    shift, and go to state 16
    OPEN                   shift, and go to state 17
    CLOSE                  shift, and go to state 18
    NOT                    shift, and go to state 19

    $default  reduce using rule 2 (stmlist)

    stmlist      go to state 113
    stm          go to state 22
    funcdef      go to state 23
    structdef    go to state 24
    decl         go to state 25
    assignment   go to state 26
    struct_decl  go to state 27
    tuple_decl   go to state 28
    array_decl   go to state 29
    expr         go to state 30
    attrlist     go to state 31
    val          go to state 32
    if           go to state 33
    while        go to state 34
    for          go to state 35
    return       go to state 36
    break        go to state 37
    str_copy     go to state 38
    in           go to state 39
    out          go to state 40
    open         go to state 41
    close        go to state 42
    len          go to state 43


State 72

   60 expr: expr EQUAL • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 114
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 73

   61 expr: expr NOT_EQUAL • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 115
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 74

   62 expr: expr LEQ • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 116
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 75

   63 expr: expr GEQ • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 117
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 76

   65 expr: expr GREATER_THAN • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 118
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 77

   64 expr: expr LESS_THAN • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 119
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 78

   67 expr: expr AND • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 120
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 79

   68 expr: expr OR • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 121
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 80

   53 expr: expr PLUS_OPERATOR • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 122
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 81

   54 expr: expr MINUS_OPERATOR • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 123
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 82

   55 expr: expr MULTI_OPERATOR • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 124
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 83

   56 expr: expr DIVISION_OPERATOR • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 125
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 84

   57 expr: expr MOD_OPERATOR • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 126
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 85

   58 expr: expr POWER_OPERATOR • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 127
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 86

   59 expr: expr CONCAT • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 128
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 87

   39 assignment: ID ASSIGN expr •
   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    LEQ                shift, and go to state 74
    GEQ                shift, and go to state 75
    GREATER_THAN       shift, and go to state 76
    LESS_THAN          shift, and go to state 77
    AND                shift, and go to state 78
    OR                 shift, and go to state 79
    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    $default  reduce using rule 39 (assignment)


State 88

   40 assignment: ID ASSIGN in •

    $default  reduce using rule 40 (assignment)


State 89

   71 attrlist: ID • SEPARATOR ID
   71         | ID SEPARATOR ID •
   72         | ID • SEPARATOR attrlist

    SEPARATOR  shift, and go to state 45

    $default  reduce using rule 71 (attrlist)


State 90

   72 attrlist: ID SEPARATOR attrlist •

    $default  reduce using rule 72 (attrlist)


State 91

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr
   88 str_copy: ID COPY_STRING expr •

    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    LEQ                shift, and go to state 74
    GEQ                shift, and go to state 75
    GREATER_THAN       shift, and go to state 76
    LESS_THAN          shift, and go to state 77
    AND                shift, and go to state 78
    OR                 shift, and go to state 79
    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    $default  reduce using rule 88 (str_copy)


State 92

   36 idlist: decl_elem COMMA • idlist

    ID  shift, and go to state 47

    idlist      go to state 129
    decl_elem   go to state 49
    assignment  go to state 50


State 93

   93 len: LEN_STRING PARENTHESES_INITIATOR VALUE • PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 130


State 94

   30 field: ID ID •

    $default  reduce using rule 30 (field)


State 95

   28 field: TYPE ID •

    $default  reduce using rule 28 (field)


State 96

   29 field: ARRAY LESS_THAN • TYPE GREATER_THAN ID

    TYPE  shift, and go to state 131


State 97

   20 funcdef: DEF field PARENTHESES_INITIATOR • paramlist PARENTHESES_TERMINATOR body

    ID     shift, and go to state 52
    TYPE   shift, and go to state 53
    ARRAY  shift, and go to state 54

    $default  reduce using rule 24 (param)

    paramlist  go to state 132
    param      go to state 133
    field      go to state 134


State 98

   49 array_decl: ARRAY LESS_THAN TYPE • GREATER_THAN ID BRACKETS_INITIATOR expr BRACKETS_TERMINATOR
   50           | ARRAY LESS_THAN TYPE • GREATER_THAN ID ASSIGN construct

    GREATER_THAN  shift, and go to state 135


State 99

   41 struct_decl: STRUCT ID ID •
   42            | STRUCT ID ID • ASSIGN construct

    ASSIGN  shift, and go to state 136

    $default  reduce using rule 41 (struct_decl)


State 100

   21 structdef: STRUCT ID BRACES_INITIATOR • fieldlist BRACES_TERMINATOR

    ID     shift, and go to state 52
    TYPE   shift, and go to state 53
    ARRAY  shift, and go to state 54

    fieldlist  go to state 137
    field      go to state 138


State 101

   45 types: TYPE •
   46      | TYPE • COMMA types

    COMMA  shift, and go to state 139

    $default  reduce using rule 45 (types)


State 102

   44 tuple_decl: TUPLE PARENTHESES_INITIATOR types • PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 140


State 103

   19 body: BRACES_INITIATOR • stmlist BRACES_TERMINATOR

    ID                     shift, and go to state 1
    TYPE                   shift, and go to state 2
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    DEF                    shift, and go to state 5
    ARRAY                  shift, and go to state 6
    STRUCT                 shift, and go to state 7
    TUPLE                  shift, and go to state 8
    WHILE                  shift, and go to state 9
    FOR                    shift, and go to state 10
    IF                     shift, and go to state 11
    BREAK                  shift, and go to state 12
    RETURN                 shift, and go to state 13
    PARENTHESES_INITIATOR  shift, and go to state 14
    IN                     shift, and go to state 15
    OUT                    shift, and go to state 16
    OPEN                   shift, and go to state 17
    CLOSE                  shift, and go to state 18
    NOT                    shift, and go to state 19

    stmlist      go to state 141
    stm          go to state 22
    funcdef      go to state 23
    structdef    go to state 24
    decl         go to state 25
    assignment   go to state 26
    struct_decl  go to state 27
    tuple_decl   go to state 28
    array_decl   go to state 29
    expr         go to state 30
    attrlist     go to state 31
    val          go to state 32
    if           go to state 33
    while        go to state 34
    for          go to state 35
    return       go to state 36
    break        go to state 37
    str_copy     go to state 38
    in           go to state 39
    out          go to state 40
    open         go to state 41
    close        go to state 42
    len          go to state 43


State 104

   81 while: WHILE expr body •

    $default  reduce using rule 81 (while)


State 105

   83 init: TYPE • ID ITERATOR range

    ID  shift, and go to state 142


State 106

   82 for: FOR PARENTHESES_INITIATOR init • PARENTHESES_TERMINATOR body

    PARENTHESES_TERMINATOR  shift, and go to state 143


State 107

   75 if: IF expr body • if_opt

    ELIF  shift, and go to state 144

    $default  reduce using rule 77 (elif_opt)

    if_opt    go to state 145
    elif_opt  go to state 146


State 108

   69 expr: PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR •

    $default  reduce using rule 69 (expr)


State 109

   73 val: ID •

    $default  reduce using rule 73 (val)


State 110

   89 in: IN PARENTHESES_INITIATOR val • PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 147


State 111

   91 open: OPEN PARENTHESES_INITIATOR val • PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 148


State 112

   92 close: CLOSE PARENTHESES_INITIATOR val • PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 149


State 113

    3 stmlist: stm SEMICOLON stmlist •

    $default  reduce using rule 3 (stmlist)


State 114

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   60     | expr EQUAL expr •
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 60 (expr)


State 115

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   61     | expr NOT_EQUAL expr •
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 61 (expr)


State 116

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   62     | expr LEQ expr •
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 62 (expr)


State 117

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   63     | expr GEQ expr •
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 63 (expr)


State 118

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   65     | expr GREATER_THAN expr •
   67     | expr • AND expr
   68     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 65 (expr)


State 119

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   64     | expr LESS_THAN expr •
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 64 (expr)


State 120

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   67     | expr AND expr •
   68     | expr • OR expr

    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    LEQ                shift, and go to state 74
    GEQ                shift, and go to state 75
    GREATER_THAN       shift, and go to state 76
    LESS_THAN          shift, and go to state 77
    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    $default  reduce using rule 67 (expr)


State 121

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr
   68     | expr OR expr •

    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    LEQ                shift, and go to state 74
    GEQ                shift, and go to state 75
    GREATER_THAN       shift, and go to state 76
    LESS_THAN          shift, and go to state 77
    AND                shift, and go to state 78
    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    $default  reduce using rule 68 (expr)


State 122

   53 expr: expr • PLUS_OPERATOR expr
   53     | expr PLUS_OPERATOR expr •
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    $default  reduce using rule 53 (expr)


State 123

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   54     | expr MINUS_OPERATOR expr •
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    $default  reduce using rule 54 (expr)


State 124

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   55     | expr MULTI_OPERATOR expr •
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    CONCAT  shift, and go to state 86

    $default  reduce using rule 55 (expr)


State 125

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   56     | expr DIVISION_OPERATOR expr •
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    CONCAT  shift, and go to state 86

    $default  reduce using rule 56 (expr)


State 126

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   57     | expr MOD_OPERATOR expr •
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    CONCAT  shift, and go to state 86

    $default  reduce using rule 57 (expr)


State 127

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   58     | expr POWER_OPERATOR expr •
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    CONCAT  shift, and go to state 86

    $default  reduce using rule 58 (expr)


State 128

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   59     | expr CONCAT expr •
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    CONCAT  error (nonassociative)

    $default  reduce using rule 59 (expr)


State 129

   36 idlist: decl_elem COMMA idlist •

    $default  reduce using rule 36 (idlist)


State 130

   93 len: LEN_STRING PARENTHESES_INITIATOR VALUE PARENTHESES_TERMINATOR •

    $default  reduce using rule 93 (len)


State 131

   29 field: ARRAY LESS_THAN TYPE • GREATER_THAN ID

    GREATER_THAN  shift, and go to state 150


State 132

   20 funcdef: DEF field PARENTHESES_INITIATOR paramlist • PARENTHESES_TERMINATOR body

    PARENTHESES_TERMINATOR  shift, and go to state 151


State 133

   22 paramlist: param •
   23          | param • COMMA paramlist

    COMMA  shift, and go to state 152

    $default  reduce using rule 22 (paramlist)


State 134

   25 param: field •

    $default  reduce using rule 25 (param)


State 135

   49 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN • ID BRACKETS_INITIATOR expr BRACKETS_TERMINATOR
   50           | ARRAY LESS_THAN TYPE GREATER_THAN • ID ASSIGN construct

    ID  shift, and go to state 153


State 136

   42 struct_decl: STRUCT ID ID ASSIGN • construct

    BRACES_INITIATOR  shift, and go to state 154

    construct  go to state 155


State 137

   21 structdef: STRUCT ID BRACES_INITIATOR fieldlist • BRACES_TERMINATOR

    BRACES_TERMINATOR  shift, and go to state 156


State 138

   26 fieldlist: field • SEMICOLON
   27          | field • SEMICOLON fieldlist

    SEMICOLON  shift, and go to state 157


State 139

   46 types: TYPE COMMA • types

    TYPE  shift, and go to state 101

    types  go to state 158


State 140

   44 tuple_decl: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR • ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    ID  shift, and go to state 159


State 141

   19 body: BRACES_INITIATOR stmlist • BRACES_TERMINATOR

    BRACES_TERMINATOR  shift, and go to state 160


State 142

   83 init: TYPE ID • ITERATOR range

    ITERATOR  shift, and go to state 161


State 143

   82 for: FOR PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR • body

    BRACES_INITIATOR  shift, and go to state 103

    body  go to state 162


State 144

   78 elif_opt: ELIF • expr body elif_opt

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 163
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 145

   75 if: IF expr body if_opt •

    $default  reduce using rule 75 (if)


State 146

   76 if_opt: elif_opt • else_opt

    ELSE  shift, and go to state 164

    $default  reduce using rule 79 (else_opt)

    else_opt  go to state 165


State 147

   89 in: IN PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR •

    $default  reduce using rule 89 (in)


State 148

   91 open: OPEN PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR •

    $default  reduce using rule 91 (open)


State 149

   92 close: CLOSE PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR •

    $default  reduce using rule 92 (close)


State 150

   29 field: ARRAY LESS_THAN TYPE GREATER_THAN • ID

    ID  shift, and go to state 166


State 151

   20 funcdef: DEF field PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR • body

    BRACES_INITIATOR  shift, and go to state 103

    body  go to state 167


State 152

   23 paramlist: param COMMA • paramlist

    ID     shift, and go to state 52
    TYPE   shift, and go to state 53
    ARRAY  shift, and go to state 54

    $default  reduce using rule 24 (param)

    paramlist  go to state 168
    param      go to state 133
    field      go to state 134


State 153

   49 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID • BRACKETS_INITIATOR expr BRACKETS_TERMINATOR
   50           | ARRAY LESS_THAN TYPE GREATER_THAN ID • ASSIGN construct

    ASSIGN              shift, and go to state 169
    BRACKETS_INITIATOR  shift, and go to state 170


State 154

   43 construct: BRACES_INITIATOR • exprlist BRACES_TERMINATOR

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    exprlist  go to state 171
    expr      go to state 172
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 155

   42 struct_decl: STRUCT ID ID ASSIGN construct •

    $default  reduce using rule 42 (struct_decl)


State 156

   21 structdef: STRUCT ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR •

    $default  reduce using rule 21 (structdef)


State 157

   26 fieldlist: field SEMICOLON •
   27          | field SEMICOLON • fieldlist

    ID     shift, and go to state 52
    TYPE   shift, and go to state 53
    ARRAY  shift, and go to state 54

    $default  reduce using rule 26 (fieldlist)

    fieldlist  go to state 173
    field      go to state 138


State 158

   46 types: TYPE COMMA types •

    $default  reduce using rule 46 (types)


State 159

   44 tuple_decl: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID • ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    ASSIGN  shift, and go to state 174


State 160

   19 body: BRACES_INITIATOR stmlist BRACES_TERMINATOR •

    $default  reduce using rule 19 (body)


State 161

   83 init: TYPE ID ITERATOR • range

    ID                  shift, and go to state 175
    BRACKETS_INITIATOR  shift, and go to state 176

    range  go to state 177


State 162

   82 for: FOR PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR body •

    $default  reduce using rule 82 (for)


State 163

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr
   78 elif_opt: ELIF expr • body elif_opt

    BRACES_INITIATOR   shift, and go to state 103
    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    LEQ                shift, and go to state 74
    GEQ                shift, and go to state 75
    GREATER_THAN       shift, and go to state 76
    LESS_THAN          shift, and go to state 77
    AND                shift, and go to state 78
    OR                 shift, and go to state 79
    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    body  go to state 178


State 164

   80 else_opt: ELSE • body

    BRACES_INITIATOR  shift, and go to state 103

    body  go to state 179


State 165

   76 if_opt: elif_opt else_opt •

    $default  reduce using rule 76 (if_opt)


State 166

   29 field: ARRAY LESS_THAN TYPE GREATER_THAN ID •

    $default  reduce using rule 29 (field)


State 167

   20 funcdef: DEF field PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR body •

    $default  reduce using rule 20 (funcdef)


State 168

   23 paramlist: param COMMA paramlist •

    $default  reduce using rule 23 (paramlist)


State 169

   50 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID ASSIGN • construct

    BRACES_INITIATOR  shift, and go to state 154

    construct  go to state 180


State 170

   49 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID BRACKETS_INITIATOR • expr BRACKETS_TERMINATOR

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 181
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 171

   43 construct: BRACES_INITIATOR exprlist • BRACES_TERMINATOR
   48 exprlist: exprlist • COMMA expr

    COMMA              shift, and go to state 182
    BRACES_TERMINATOR  shift, and go to state 183


State 172

   47 exprlist: expr •
   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    LEQ                shift, and go to state 74
    GEQ                shift, and go to state 75
    GREATER_THAN       shift, and go to state 76
    LESS_THAN          shift, and go to state 77
    AND                shift, and go to state 78
    OR                 shift, and go to state 79
    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    $default  reduce using rule 47 (exprlist)


State 173

   27 fieldlist: field SEMICOLON fieldlist •

    $default  reduce using rule 27 (fieldlist)


State 174

   44 tuple_decl: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN • PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 184


State 175

   85 range: ID •

    $default  reduce using rule 85 (range)


State 176

   84 range: BRACKETS_INITIATOR • expr COMMA expr BRACKETS_TERMINATOR

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 185
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 177

   83 init: TYPE ID ITERATOR range •

    $default  reduce using rule 83 (init)


State 178

   78 elif_opt: ELIF expr body • elif_opt

    ELIF  shift, and go to state 144

    $default  reduce using rule 77 (elif_opt)

    elif_opt  go to state 186


State 179

   80 else_opt: ELSE body •

    $default  reduce using rule 80 (else_opt)


State 180

   50 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID ASSIGN construct •

    $default  reduce using rule 50 (array_decl)


State 181

   49 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID BRACKETS_INITIATOR expr • BRACKETS_TERMINATOR
   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    BRACKETS_TERMINATOR  shift, and go to state 187
    EQUAL                shift, and go to state 72
    NOT_EQUAL            shift, and go to state 73
    LEQ                  shift, and go to state 74
    GEQ                  shift, and go to state 75
    GREATER_THAN         shift, and go to state 76
    LESS_THAN            shift, and go to state 77
    AND                  shift, and go to state 78
    OR                   shift, and go to state 79
    PLUS_OPERATOR        shift, and go to state 80
    MINUS_OPERATOR       shift, and go to state 81
    MULTI_OPERATOR       shift, and go to state 82
    DIVISION_OPERATOR    shift, and go to state 83
    MOD_OPERATOR         shift, and go to state 84
    POWER_OPERATOR       shift, and go to state 85
    CONCAT               shift, and go to state 86


State 182

   48 exprlist: exprlist COMMA • expr

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 188
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 183

   43 construct: BRACES_INITIATOR exprlist BRACES_TERMINATOR •

    $default  reduce using rule 43 (construct)


State 184

   44 tuple_decl: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR • exprlist PARENTHESES_TERMINATOR

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    exprlist  go to state 189
    expr      go to state 172
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 185

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr
   84 range: BRACKETS_INITIATOR expr • COMMA expr BRACKETS_TERMINATOR

    COMMA              shift, and go to state 190
    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    LEQ                shift, and go to state 74
    GEQ                shift, and go to state 75
    GREATER_THAN       shift, and go to state 76
    LESS_THAN          shift, and go to state 77
    AND                shift, and go to state 78
    OR                 shift, and go to state 79
    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86


State 186

   78 elif_opt: ELIF expr body elif_opt •

    $default  reduce using rule 78 (elif_opt)


State 187

   49 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID BRACKETS_INITIATOR expr BRACKETS_TERMINATOR •

    $default  reduce using rule 49 (array_decl)


State 188

   48 exprlist: exprlist COMMA expr •
   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr

    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    LEQ                shift, and go to state 74
    GEQ                shift, and go to state 75
    GREATER_THAN       shift, and go to state 76
    LESS_THAN          shift, and go to state 77
    AND                shift, and go to state 78
    OR                 shift, and go to state 79
    PLUS_OPERATOR      shift, and go to state 80
    MINUS_OPERATOR     shift, and go to state 81
    MULTI_OPERATOR     shift, and go to state 82
    DIVISION_OPERATOR  shift, and go to state 83
    MOD_OPERATOR       shift, and go to state 84
    POWER_OPERATOR     shift, and go to state 85
    CONCAT             shift, and go to state 86

    $default  reduce using rule 48 (exprlist)


State 189

   44 tuple_decl: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist • PARENTHESES_TERMINATOR
   48 exprlist: exprlist • COMMA expr

    COMMA                   shift, and go to state 182
    PARENTHESES_TERMINATOR  shift, and go to state 191


State 190

   84 range: BRACKETS_INITIATOR expr COMMA • expr BRACKETS_TERMINATOR

    ID                     shift, and go to state 59
    VALUE                  shift, and go to state 3
    LEN_STRING             shift, and go to state 4
    PARENTHESES_INITIATOR  shift, and go to state 14
    NOT                    shift, and go to state 19

    expr      go to state 192
    attrlist  go to state 31
    val       go to state 32
    len       go to state 43


State 191

   44 tuple_decl: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR •

    $default  reduce using rule 44 (tuple_decl)


State 192

   53 expr: expr • PLUS_OPERATOR expr
   54     | expr • MINUS_OPERATOR expr
   55     | expr • MULTI_OPERATOR expr
   56     | expr • DIVISION_OPERATOR expr
   57     | expr • MOD_OPERATOR expr
   58     | expr • POWER_OPERATOR expr
   59     | expr • CONCAT expr
   60     | expr • EQUAL expr
   61     | expr • NOT_EQUAL expr
   62     | expr • LEQ expr
   63     | expr • GEQ expr
   64     | expr • LESS_THAN expr
   65     | expr • GREATER_THAN expr
   67     | expr • AND expr
   68     | expr • OR expr
   84 range: BRACKETS_INITIATOR expr COMMA expr • BRACKETS_TERMINATOR

    BRACKETS_TERMINATOR  shift, and go to state 193
    EQUAL                shift, and go to state 72
    NOT_EQUAL            shift, and go to state 73
    LEQ                  shift, and go to state 74
    GEQ                  shift, and go to state 75
    GREATER_THAN         shift, and go to state 76
    LESS_THAN            shift, and go to state 77
    AND                  shift, and go to state 78
    OR                   shift, and go to state 79
    PLUS_OPERATOR        shift, and go to state 80
    MINUS_OPERATOR       shift, and go to state 81
    MULTI_OPERATOR       shift, and go to state 82
    DIVISION_OPERATOR    shift, and go to state 83
    MOD_OPERATOR         shift, and go to state 84
    POWER_OPERATOR       shift, and go to state 85
    CONCAT               shift, and go to state 86


State 193

   84 range: BRACKETS_INITIATOR expr COMMA expr BRACKETS_TERMINATOR •

    $default  reduce using rule 84 (range)
