Terminals unused in grammar

    LEN_STRING
    COMMENT


Grammar

    0 $accept: prog $end

    1 prog: stmlist

    2 stmlist: stm SEMICOLON
    3        | stm SEMICOLON stmlist

    4 stm: funcdef
    5    | decl
    6    | assignment
    7    | expr
    8    | if
    9    | while
   10    | for
   11    | break
   12    | return
   13    | str_copy
   14    | in
   15    | out
   16    | open
   17    | close

   18 body: BRACES_INITIATOR stmlist BRACES_TERMINATOR

   19 funcdef: DEF field PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR body

   20 paramlist: param
   21          | param COMMA paramlist

   22 param: %empty
   23      | field

   24 fieldlist: field SEMICOLON
   25          | field SEMICOLON fieldlist

   26 field: TYPE ID

   27 decl: TYPE idlist
   28     | struct_decl
   29     | tuple_decl
   30     | array_decl

   31 idlist: decl_elem
   32       | decl_elem COMMA idlist

   33 decl_elem: ID
   34          | assignment

   35 assignment: ID ASSIGN expr

   36 struct_decl: STRUCT ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR

   37 tuple_decl: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

   38 types: TYPE
   39      | TYPE COMMA types

   40 exprlist: expr
   41         | exprlist COMMA expr

   42 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR
   43           | ARRAY LESS_THAN TYPE GREATER_THAN ID ASSIGN BRACKETS_INITIATOR values BRACKETS_TERMINATOR

   44 values: VALUE
   45       | VALUE COMMA values

   46 expr: val
   47     | expr PLUS_OPERATOR expr
   48     | expr MINUS_OPERATOR expr
   49     | expr MULTI_OPERATOR expr
   50     | expr DIVISION_OPERATOR expr
   51     | expr MOD_OPERATOR expr
   52     | expr POWER_OPERATOR expr
   53     | expr CONCAT expr
   54     | expr EQUAL expr
   55     | expr NOT_EQUAL expr
   56     | expr LEQ expr
   57     | expr GEQ expr
   58     | expr LESS_THAN expr
   59     | expr GREATER_THAN expr
   60     | NOT expr
   61     | expr AND expr
   62     | expr OR expr
   63     | PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR
   64     | attrlist

   65 attrlist: ID SEPARATOR ID
   66         | ID SEPARATOR attrlist

   67 val: ID
   68    | VALUE

   69 if: IF expr body if_opt

   70 if_opt: elif_opt else_opt

   71 elif_opt: %empty
   72         | expr body

   73 else_opt: %empty
   74         | body

   75 while: WHILE expr body

   76 for: FOR PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR body

   77 init: TYPE ID ITERATOR range

   78 range: BRACKETS_INITIATOR expr COMMA expr BRACKETS_TERMINATOR
   79      | ID

   80 return: RETURN expr

   81 break: BREAK

   82 str_copy: ID COPY_STRING expr

   83 in: IN PARENTHESES_INITIATOR ID PARENTHESES_TERMINATOR

   84 out: OUT expr

   85 open: OPEN PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

   86 close: CLOSE PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sValue> (258) 26 33 35 36 37 42 43 65 66 67 77 79 82 83
    TYPE <sValue> (259) 26 27 38 39 42 43 77
    VALUE <sValue> (260) 42 44 45 68
    LEN_STRING <sValue> (261)
    ASSIGN (262) 35 37 43
    COMMENT (263)
    COMMA (264) 21 32 39 41 45 78
    SEMICOLON (265) 2 3 24 25
    SEPARATOR (266) 65 66
    DEF (267) 19
    ARRAY (268) 42 43
    STRUCT (269) 36
    TUPLE (270) 37
    WHILE (271) 75
    FOR (272) 76
    ITERATOR (273) 77
    IF (274) 69
    ELSE (275)
    ELIF (276)
    BREAK (277) 81
    RETURN (278) 80
    BRACES_INITIATOR (279) 18 36
    BRACES_TERMINATOR (280) 18 36
    BRACKETS_INITIATOR (281) 42 43 78
    BRACKETS_TERMINATOR (282) 42 43 78
    PARENTHESES_INITIATOR (283) 19 37 63 76 83 85 86
    PARENTHESES_TERMINATOR (284) 19 37 63 76 83 85 86
    IN (285) 83
    OUT (286) 84
    OPEN (287) 85
    CLOSE (288) 86
    EQUAL (289) 54
    NOT_EQUAL (290) 55
    LEQ (291) 56
    GEQ (292) 57
    GREATER_THAN (293) 42 43 59
    LESS_THAN (294) 42 43 58
    NOT (295) 60
    AND (296) 61
    OR (297) 62
    PLUS_OPERATOR (298) 47
    MINUS_OPERATOR (299) 48
    MULTI_OPERATOR (300) 49
    DIVISION_OPERATOR (301) 50
    MOD_OPERATOR (302) 51
    POWER_OPERATOR (303) 52
    CONCAT (304) 53
    COPY_STRING (305) 82


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    prog <sValue> (52)
        on left: 1
        on right: 0
    stmlist <sValue> (53)
        on left: 2 3
        on right: 1 3 18
    stm <sValue> (54)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17
        on right: 2 3
    body (55)
        on left: 18
        on right: 19 69 72 74 75 76
    funcdef (56)
        on left: 19
        on right: 4
    paramlist (57)
        on left: 20 21
        on right: 19 21
    param (58)
        on left: 22 23
        on right: 20 21
    fieldlist (59)
        on left: 24 25
        on right: 25 36
    field (60)
        on left: 26
        on right: 19 23 24 25
    decl (61)
        on left: 27 28 29 30
        on right: 5
    idlist (62)
        on left: 31 32
        on right: 27 32
    decl_elem (63)
        on left: 33 34
        on right: 31 32
    assignment (64)
        on left: 35
        on right: 6 34
    struct_decl (65)
        on left: 36
        on right: 28
    tuple_decl (66)
        on left: 37
        on right: 29
    types (67)
        on left: 38 39
        on right: 37 39
    exprlist (68)
        on left: 40 41
        on right: 37 41
    array_decl (69)
        on left: 42 43
        on right: 30
    values (70)
        on left: 44 45
        on right: 43 45
    expr (71)
        on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
        on right: 7 35 40 41 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 69 72 75 78 80 82 84
    attrlist (72)
        on left: 65 66
        on right: 64 66
    val (73)
        on left: 67 68
        on right: 46 85 86
    if (74)
        on left: 69
        on right: 8
    if_opt (75)
        on left: 70
        on right: 69
    elif_opt (76)
        on left: 71 72
        on right: 70
    else_opt (77)
        on left: 73 74
        on right: 70
    while (78)
        on left: 75
        on right: 9
    for (79)
        on left: 76
        on right: 10
    init (80)
        on left: 77
        on right: 76
    range (81)
        on left: 78 79
        on right: 77
    return (82)
        on left: 80
        on right: 12
    break (83)
        on left: 81
        on right: 11
    str_copy (84)
        on left: 82
        on right: 13
    in (85)
        on left: 83
        on right: 14
    out (86)
        on left: 84
        on right: 15
    open (87)
        on left: 85
        on right: 16
    close (88)
        on left: 86
        on right: 17


State 0

    0 $accept: . prog $end

    ID                     shift, and go to state 1
    TYPE                   shift, and go to state 2
    VALUE                  shift, and go to state 3
    DEF                    shift, and go to state 4
    ARRAY                  shift, and go to state 5
    STRUCT                 shift, and go to state 6
    TUPLE                  shift, and go to state 7
    WHILE                  shift, and go to state 8
    FOR                    shift, and go to state 9
    IF                     shift, and go to state 10
    BREAK                  shift, and go to state 11
    RETURN                 shift, and go to state 12
    PARENTHESES_INITIATOR  shift, and go to state 13
    IN                     shift, and go to state 14
    OUT                    shift, and go to state 15
    OPEN                   shift, and go to state 16
    CLOSE                  shift, and go to state 17
    NOT                    shift, and go to state 18

    prog         go to state 19
    stmlist      go to state 20
    stm          go to state 21
    funcdef      go to state 22
    decl         go to state 23
    assignment   go to state 24
    struct_decl  go to state 25
    tuple_decl   go to state 26
    array_decl   go to state 27
    expr         go to state 28
    attrlist     go to state 29
    val          go to state 30
    if           go to state 31
    while        go to state 32
    for          go to state 33
    return       go to state 34
    break        go to state 35
    str_copy     go to state 36
    in           go to state 37
    out          go to state 38
    open         go to state 39
    close        go to state 40


State 1

   35 assignment: ID . ASSIGN expr
   65 attrlist: ID . SEPARATOR ID
   66         | ID . SEPARATOR attrlist
   67 val: ID .
   82 str_copy: ID . COPY_STRING expr

    ASSIGN       shift, and go to state 41
    SEPARATOR    shift, and go to state 42
    COPY_STRING  shift, and go to state 43

    $default  reduce using rule 67 (val)


State 2

   27 decl: TYPE . idlist

    ID  shift, and go to state 44

    idlist      go to state 45
    decl_elem   go to state 46
    assignment  go to state 47


State 3

   68 val: VALUE .

    $default  reduce using rule 68 (val)


State 4

   19 funcdef: DEF . field PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR body

    TYPE  shift, and go to state 48

    field  go to state 49


State 5

   42 array_decl: ARRAY . LESS_THAN TYPE GREATER_THAN ID BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR
   43           | ARRAY . LESS_THAN TYPE GREATER_THAN ID ASSIGN BRACKETS_INITIATOR values BRACKETS_TERMINATOR

    LESS_THAN  shift, and go to state 50


State 6

   36 struct_decl: STRUCT . ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR

    ID  shift, and go to state 51


State 7

   37 tuple_decl: TUPLE . PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 52


State 8

   75 while: WHILE . expr body

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 54
    attrlist  go to state 29
    val       go to state 30


State 9

   76 for: FOR . PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR body

    PARENTHESES_INITIATOR  shift, and go to state 55


State 10

   69 if: IF . expr body if_opt

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 56
    attrlist  go to state 29
    val       go to state 30


State 11

   81 break: BREAK .

    $default  reduce using rule 81 (break)


State 12

   80 return: RETURN . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 57
    attrlist  go to state 29
    val       go to state 30


State 13

   63 expr: PARENTHESES_INITIATOR . expr PARENTHESES_TERMINATOR

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 58
    attrlist  go to state 29
    val       go to state 30


State 14

   83 in: IN . PARENTHESES_INITIATOR ID PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 59


State 15

   84 out: OUT . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 60
    attrlist  go to state 29
    val       go to state 30


State 16

   85 open: OPEN . PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 61


State 17

   86 close: CLOSE . PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 62


State 18

   60 expr: NOT . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 63
    attrlist  go to state 29
    val       go to state 30


State 19

    0 $accept: prog . $end

    $end  shift, and go to state 64


State 20

    1 prog: stmlist .

    $default  reduce using rule 1 (prog)


State 21

    2 stmlist: stm . SEMICOLON
    3        | stm . SEMICOLON stmlist

    SEMICOLON  shift, and go to state 65


State 22

    4 stm: funcdef .

    $default  reduce using rule 4 (stm)


State 23

    5 stm: decl .

    $default  reduce using rule 5 (stm)


State 24

    6 stm: assignment .

    $default  reduce using rule 6 (stm)


State 25

   28 decl: struct_decl .

    $default  reduce using rule 28 (decl)


State 26

   29 decl: tuple_decl .

    $default  reduce using rule 29 (decl)


State 27

   30 decl: array_decl .

    $default  reduce using rule 30 (decl)


State 28

    7 stm: expr .
   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    EQUAL              shift, and go to state 66
    NOT_EQUAL          shift, and go to state 67
    LEQ                shift, and go to state 68
    GEQ                shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    LESS_THAN          shift, and go to state 71
    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    $default  reduce using rule 7 (stm)


State 29

   64 expr: attrlist .

    $default  reduce using rule 64 (expr)


State 30

   46 expr: val .

    $default  reduce using rule 46 (expr)


State 31

    8 stm: if .

    $default  reduce using rule 8 (stm)


State 32

    9 stm: while .

    $default  reduce using rule 9 (stm)


State 33

   10 stm: for .

    $default  reduce using rule 10 (stm)


State 34

   12 stm: return .

    $default  reduce using rule 12 (stm)


State 35

   11 stm: break .

    $default  reduce using rule 11 (stm)


State 36

   13 stm: str_copy .

    $default  reduce using rule 13 (stm)


State 37

   14 stm: in .

    $default  reduce using rule 14 (stm)


State 38

   15 stm: out .

    $default  reduce using rule 15 (stm)


State 39

   16 stm: open .

    $default  reduce using rule 16 (stm)


State 40

   17 stm: close .

    $default  reduce using rule 17 (stm)


State 41

   35 assignment: ID ASSIGN . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 81
    attrlist  go to state 29
    val       go to state 30


State 42

   65 attrlist: ID SEPARATOR . ID
   66         | ID SEPARATOR . attrlist

    ID  shift, and go to state 82

    attrlist  go to state 83


State 43

   82 str_copy: ID COPY_STRING . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 84
    attrlist  go to state 29
    val       go to state 30


State 44

   33 decl_elem: ID .
   35 assignment: ID . ASSIGN expr

    ASSIGN  shift, and go to state 41

    $default  reduce using rule 33 (decl_elem)


State 45

   27 decl: TYPE idlist .

    $default  reduce using rule 27 (decl)


State 46

   31 idlist: decl_elem .
   32       | decl_elem . COMMA idlist

    COMMA  shift, and go to state 85

    $default  reduce using rule 31 (idlist)


State 47

   34 decl_elem: assignment .

    $default  reduce using rule 34 (decl_elem)


State 48

   26 field: TYPE . ID

    ID  shift, and go to state 86


State 49

   19 funcdef: DEF field . PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR body

    PARENTHESES_INITIATOR  shift, and go to state 87


State 50

   42 array_decl: ARRAY LESS_THAN . TYPE GREATER_THAN ID BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR
   43           | ARRAY LESS_THAN . TYPE GREATER_THAN ID ASSIGN BRACKETS_INITIATOR values BRACKETS_TERMINATOR

    TYPE  shift, and go to state 88


State 51

   36 struct_decl: STRUCT ID . BRACES_INITIATOR fieldlist BRACES_TERMINATOR

    BRACES_INITIATOR  shift, and go to state 89


State 52

   37 tuple_decl: TUPLE PARENTHESES_INITIATOR . types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    TYPE  shift, and go to state 90

    types  go to state 91


State 53

   65 attrlist: ID . SEPARATOR ID
   66         | ID . SEPARATOR attrlist
   67 val: ID .

    SEPARATOR  shift, and go to state 42

    $default  reduce using rule 67 (val)


State 54

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr
   75 while: WHILE expr . body

    BRACES_INITIATOR   shift, and go to state 92
    EQUAL              shift, and go to state 66
    NOT_EQUAL          shift, and go to state 67
    LEQ                shift, and go to state 68
    GEQ                shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    LESS_THAN          shift, and go to state 71
    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    body  go to state 93


State 55

   76 for: FOR PARENTHESES_INITIATOR . init PARENTHESES_TERMINATOR body

    TYPE  shift, and go to state 94

    init  go to state 95


State 56

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr
   69 if: IF expr . body if_opt

    BRACES_INITIATOR   shift, and go to state 92
    EQUAL              shift, and go to state 66
    NOT_EQUAL          shift, and go to state 67
    LEQ                shift, and go to state 68
    GEQ                shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    LESS_THAN          shift, and go to state 71
    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    body  go to state 96


State 57

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr
   80 return: RETURN expr .

    EQUAL              shift, and go to state 66
    NOT_EQUAL          shift, and go to state 67
    LEQ                shift, and go to state 68
    GEQ                shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    LESS_THAN          shift, and go to state 71
    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    $default  reduce using rule 80 (return)


State 58

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | PARENTHESES_INITIATOR expr . PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 97
    EQUAL                   shift, and go to state 66
    NOT_EQUAL               shift, and go to state 67
    LEQ                     shift, and go to state 68
    GEQ                     shift, and go to state 69
    GREATER_THAN            shift, and go to state 70
    LESS_THAN               shift, and go to state 71
    AND                     shift, and go to state 72
    OR                      shift, and go to state 73
    PLUS_OPERATOR           shift, and go to state 74
    MINUS_OPERATOR          shift, and go to state 75
    MULTI_OPERATOR          shift, and go to state 76
    DIVISION_OPERATOR       shift, and go to state 77
    MOD_OPERATOR            shift, and go to state 78
    POWER_OPERATOR          shift, and go to state 79
    CONCAT                  shift, and go to state 80


State 59

   83 in: IN PARENTHESES_INITIATOR . ID PARENTHESES_TERMINATOR

    ID  shift, and go to state 98


State 60

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr
   84 out: OUT expr .

    EQUAL              shift, and go to state 66
    NOT_EQUAL          shift, and go to state 67
    LEQ                shift, and go to state 68
    GEQ                shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    LESS_THAN          shift, and go to state 71
    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    $default  reduce using rule 84 (out)


State 61

   85 open: OPEN PARENTHESES_INITIATOR . val PARENTHESES_TERMINATOR

    ID     shift, and go to state 99
    VALUE  shift, and go to state 3

    val  go to state 100


State 62

   86 close: CLOSE PARENTHESES_INITIATOR . val PARENTHESES_TERMINATOR

    ID     shift, and go to state 99
    VALUE  shift, and go to state 3

    val  go to state 101


State 63

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   60     | NOT expr .
   61     | expr . AND expr
   62     | expr . OR expr

    EQUAL              shift, and go to state 66
    NOT_EQUAL          shift, and go to state 67
    LEQ                shift, and go to state 68
    GEQ                shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    LESS_THAN          shift, and go to state 71
    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    $default  reduce using rule 60 (expr)


State 64

    0 $accept: prog $end .

    $default  accept


State 65

    2 stmlist: stm SEMICOLON .
    3        | stm SEMICOLON . stmlist

    ID                     shift, and go to state 1
    TYPE                   shift, and go to state 2
    VALUE                  shift, and go to state 3
    DEF                    shift, and go to state 4
    ARRAY                  shift, and go to state 5
    STRUCT                 shift, and go to state 6
    TUPLE                  shift, and go to state 7
    WHILE                  shift, and go to state 8
    FOR                    shift, and go to state 9
    IF                     shift, and go to state 10
    BREAK                  shift, and go to state 11
    RETURN                 shift, and go to state 12
    PARENTHESES_INITIATOR  shift, and go to state 13
    IN                     shift, and go to state 14
    OUT                    shift, and go to state 15
    OPEN                   shift, and go to state 16
    CLOSE                  shift, and go to state 17
    NOT                    shift, and go to state 18

    $default  reduce using rule 2 (stmlist)

    stmlist      go to state 102
    stm          go to state 21
    funcdef      go to state 22
    decl         go to state 23
    assignment   go to state 24
    struct_decl  go to state 25
    tuple_decl   go to state 26
    array_decl   go to state 27
    expr         go to state 28
    attrlist     go to state 29
    val          go to state 30
    if           go to state 31
    while        go to state 32
    for          go to state 33
    return       go to state 34
    break        go to state 35
    str_copy     go to state 36
    in           go to state 37
    out          go to state 38
    open         go to state 39
    close        go to state 40


State 66

   54 expr: expr EQUAL . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 103
    attrlist  go to state 29
    val       go to state 30


State 67

   55 expr: expr NOT_EQUAL . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 104
    attrlist  go to state 29
    val       go to state 30


State 68

   56 expr: expr LEQ . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 105
    attrlist  go to state 29
    val       go to state 30


State 69

   57 expr: expr GEQ . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 106
    attrlist  go to state 29
    val       go to state 30


State 70

   59 expr: expr GREATER_THAN . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 107
    attrlist  go to state 29
    val       go to state 30


State 71

   58 expr: expr LESS_THAN . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 108
    attrlist  go to state 29
    val       go to state 30


State 72

   61 expr: expr AND . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 109
    attrlist  go to state 29
    val       go to state 30


State 73

   62 expr: expr OR . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 110
    attrlist  go to state 29
    val       go to state 30


State 74

   47 expr: expr PLUS_OPERATOR . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 111
    attrlist  go to state 29
    val       go to state 30


State 75

   48 expr: expr MINUS_OPERATOR . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 112
    attrlist  go to state 29
    val       go to state 30


State 76

   49 expr: expr MULTI_OPERATOR . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 113
    attrlist  go to state 29
    val       go to state 30


State 77

   50 expr: expr DIVISION_OPERATOR . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 114
    attrlist  go to state 29
    val       go to state 30


State 78

   51 expr: expr MOD_OPERATOR . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 115
    attrlist  go to state 29
    val       go to state 30


State 79

   52 expr: expr POWER_OPERATOR . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 116
    attrlist  go to state 29
    val       go to state 30


State 80

   53 expr: expr CONCAT . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 117
    attrlist  go to state 29
    val       go to state 30


State 81

   35 assignment: ID ASSIGN expr .
   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    EQUAL              shift, and go to state 66
    NOT_EQUAL          shift, and go to state 67
    LEQ                shift, and go to state 68
    GEQ                shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    LESS_THAN          shift, and go to state 71
    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    $default  reduce using rule 35 (assignment)


State 82

   65 attrlist: ID . SEPARATOR ID
   65         | ID SEPARATOR ID .
   66         | ID . SEPARATOR attrlist

    SEPARATOR  shift, and go to state 42

    $default  reduce using rule 65 (attrlist)


State 83

   66 attrlist: ID SEPARATOR attrlist .

    $default  reduce using rule 66 (attrlist)


State 84

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr
   82 str_copy: ID COPY_STRING expr .

    EQUAL              shift, and go to state 66
    NOT_EQUAL          shift, and go to state 67
    LEQ                shift, and go to state 68
    GEQ                shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    LESS_THAN          shift, and go to state 71
    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    $default  reduce using rule 82 (str_copy)


State 85

   32 idlist: decl_elem COMMA . idlist

    ID  shift, and go to state 44

    idlist      go to state 118
    decl_elem   go to state 46
    assignment  go to state 47


State 86

   26 field: TYPE ID .

    $default  reduce using rule 26 (field)


State 87

   19 funcdef: DEF field PARENTHESES_INITIATOR . paramlist PARENTHESES_TERMINATOR body

    TYPE  shift, and go to state 48

    $default  reduce using rule 22 (param)

    paramlist  go to state 119
    param      go to state 120
    field      go to state 121


State 88

   42 array_decl: ARRAY LESS_THAN TYPE . GREATER_THAN ID BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR
   43           | ARRAY LESS_THAN TYPE . GREATER_THAN ID ASSIGN BRACKETS_INITIATOR values BRACKETS_TERMINATOR

    GREATER_THAN  shift, and go to state 122


State 89

   36 struct_decl: STRUCT ID BRACES_INITIATOR . fieldlist BRACES_TERMINATOR

    TYPE  shift, and go to state 48

    fieldlist  go to state 123
    field      go to state 124


State 90

   38 types: TYPE .
   39      | TYPE . COMMA types

    COMMA  shift, and go to state 125

    $default  reduce using rule 38 (types)


State 91

   37 tuple_decl: TUPLE PARENTHESES_INITIATOR types . PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 126


State 92

   18 body: BRACES_INITIATOR . stmlist BRACES_TERMINATOR

    ID                     shift, and go to state 1
    TYPE                   shift, and go to state 2
    VALUE                  shift, and go to state 3
    DEF                    shift, and go to state 4
    ARRAY                  shift, and go to state 5
    STRUCT                 shift, and go to state 6
    TUPLE                  shift, and go to state 7
    WHILE                  shift, and go to state 8
    FOR                    shift, and go to state 9
    IF                     shift, and go to state 10
    BREAK                  shift, and go to state 11
    RETURN                 shift, and go to state 12
    PARENTHESES_INITIATOR  shift, and go to state 13
    IN                     shift, and go to state 14
    OUT                    shift, and go to state 15
    OPEN                   shift, and go to state 16
    CLOSE                  shift, and go to state 17
    NOT                    shift, and go to state 18

    stmlist      go to state 127
    stm          go to state 21
    funcdef      go to state 22
    decl         go to state 23
    assignment   go to state 24
    struct_decl  go to state 25
    tuple_decl   go to state 26
    array_decl   go to state 27
    expr         go to state 28
    attrlist     go to state 29
    val          go to state 30
    if           go to state 31
    while        go to state 32
    for          go to state 33
    return       go to state 34
    break        go to state 35
    str_copy     go to state 36
    in           go to state 37
    out          go to state 38
    open         go to state 39
    close        go to state 40


State 93

   75 while: WHILE expr body .

    $default  reduce using rule 75 (while)


State 94

   77 init: TYPE . ID ITERATOR range

    ID  shift, and go to state 128


State 95

   76 for: FOR PARENTHESES_INITIATOR init . PARENTHESES_TERMINATOR body

    PARENTHESES_TERMINATOR  shift, and go to state 129


State 96

   69 if: IF expr body . if_opt

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    $default  reduce using rule 71 (elif_opt)

    expr      go to state 130
    attrlist  go to state 29
    val       go to state 30
    if_opt    go to state 131
    elif_opt  go to state 132


State 97

   63 expr: PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR .

    $default  reduce using rule 63 (expr)


State 98

   83 in: IN PARENTHESES_INITIATOR ID . PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 133


State 99

   67 val: ID .

    $default  reduce using rule 67 (val)


State 100

   85 open: OPEN PARENTHESES_INITIATOR val . PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 134


State 101

   86 close: CLOSE PARENTHESES_INITIATOR val . PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 135


State 102

    3 stmlist: stm SEMICOLON stmlist .

    $default  reduce using rule 3 (stmlist)


State 103

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   54     | expr EQUAL expr .
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 54 (expr)


State 104

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   55     | expr NOT_EQUAL expr .
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 55 (expr)


State 105

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   56     | expr LEQ expr .
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 56 (expr)


State 106

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   57     | expr GEQ expr .
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 57 (expr)


State 107

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   59     | expr GREATER_THAN expr .
   61     | expr . AND expr
   62     | expr . OR expr

    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 59 (expr)


State 108

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   58     | expr LESS_THAN expr .
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 58 (expr)


State 109

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   61     | expr AND expr .
   62     | expr . OR expr

    EQUAL              shift, and go to state 66
    NOT_EQUAL          shift, and go to state 67
    LEQ                shift, and go to state 68
    GEQ                shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    LESS_THAN          shift, and go to state 71
    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    $default  reduce using rule 61 (expr)


State 110

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr
   62     | expr OR expr .

    EQUAL              shift, and go to state 66
    NOT_EQUAL          shift, and go to state 67
    LEQ                shift, and go to state 68
    GEQ                shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    LESS_THAN          shift, and go to state 71
    AND                shift, and go to state 72
    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    $default  reduce using rule 62 (expr)


State 111

   47 expr: expr . PLUS_OPERATOR expr
   47     | expr PLUS_OPERATOR expr .
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    $default  reduce using rule 47 (expr)


State 112

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   48     | expr MINUS_OPERATOR expr .
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    $default  reduce using rule 48 (expr)


State 113

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   49     | expr MULTI_OPERATOR expr .
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    CONCAT  shift, and go to state 80

    $default  reduce using rule 49 (expr)


State 114

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   50     | expr DIVISION_OPERATOR expr .
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    CONCAT  shift, and go to state 80

    $default  reduce using rule 50 (expr)


State 115

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   51     | expr MOD_OPERATOR expr .
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    CONCAT  shift, and go to state 80

    $default  reduce using rule 51 (expr)


State 116

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   52     | expr POWER_OPERATOR expr .
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    CONCAT  shift, and go to state 80

    $default  reduce using rule 52 (expr)


State 117

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   53     | expr CONCAT expr .
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    CONCAT  error (nonassociative)

    $default  reduce using rule 53 (expr)


State 118

   32 idlist: decl_elem COMMA idlist .

    $default  reduce using rule 32 (idlist)


State 119

   19 funcdef: DEF field PARENTHESES_INITIATOR paramlist . PARENTHESES_TERMINATOR body

    PARENTHESES_TERMINATOR  shift, and go to state 136


State 120

   20 paramlist: param .
   21          | param . COMMA paramlist

    COMMA  shift, and go to state 137

    $default  reduce using rule 20 (paramlist)


State 121

   23 param: field .

    $default  reduce using rule 23 (param)


State 122

   42 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN . ID BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR
   43           | ARRAY LESS_THAN TYPE GREATER_THAN . ID ASSIGN BRACKETS_INITIATOR values BRACKETS_TERMINATOR

    ID  shift, and go to state 138


State 123

   36 struct_decl: STRUCT ID BRACES_INITIATOR fieldlist . BRACES_TERMINATOR

    BRACES_TERMINATOR  shift, and go to state 139


State 124

   24 fieldlist: field . SEMICOLON
   25          | field . SEMICOLON fieldlist

    SEMICOLON  shift, and go to state 140


State 125

   39 types: TYPE COMMA . types

    TYPE  shift, and go to state 90

    types  go to state 141


State 126

   37 tuple_decl: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR . ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    ID  shift, and go to state 142


State 127

   18 body: BRACES_INITIATOR stmlist . BRACES_TERMINATOR

    BRACES_TERMINATOR  shift, and go to state 143


State 128

   77 init: TYPE ID . ITERATOR range

    ITERATOR  shift, and go to state 144


State 129

   76 for: FOR PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR . body

    BRACES_INITIATOR  shift, and go to state 92

    body  go to state 145


State 130

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr
   72 elif_opt: expr . body

    BRACES_INITIATOR   shift, and go to state 92
    EQUAL              shift, and go to state 66
    NOT_EQUAL          shift, and go to state 67
    LEQ                shift, and go to state 68
    GEQ                shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    LESS_THAN          shift, and go to state 71
    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    body  go to state 146


State 131

   69 if: IF expr body if_opt .

    $default  reduce using rule 69 (if)


State 132

   70 if_opt: elif_opt . else_opt

    BRACES_INITIATOR  shift, and go to state 92

    $default  reduce using rule 73 (else_opt)

    body      go to state 147
    else_opt  go to state 148


State 133

   83 in: IN PARENTHESES_INITIATOR ID PARENTHESES_TERMINATOR .

    $default  reduce using rule 83 (in)


State 134

   85 open: OPEN PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR .

    $default  reduce using rule 85 (open)


State 135

   86 close: CLOSE PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR .

    $default  reduce using rule 86 (close)


State 136

   19 funcdef: DEF field PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR . body

    BRACES_INITIATOR  shift, and go to state 92

    body  go to state 149


State 137

   21 paramlist: param COMMA . paramlist

    TYPE  shift, and go to state 48

    $default  reduce using rule 22 (param)

    paramlist  go to state 150
    param      go to state 120
    field      go to state 121


State 138

   42 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID . BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR
   43           | ARRAY LESS_THAN TYPE GREATER_THAN ID . ASSIGN BRACKETS_INITIATOR values BRACKETS_TERMINATOR

    ASSIGN              shift, and go to state 151
    BRACKETS_INITIATOR  shift, and go to state 152


State 139

   36 struct_decl: STRUCT ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR .

    $default  reduce using rule 36 (struct_decl)


State 140

   24 fieldlist: field SEMICOLON .
   25          | field SEMICOLON . fieldlist

    TYPE  shift, and go to state 48

    $default  reduce using rule 24 (fieldlist)

    fieldlist  go to state 153
    field      go to state 124


State 141

   39 types: TYPE COMMA types .

    $default  reduce using rule 39 (types)


State 142

   37 tuple_decl: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID . ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    ASSIGN  shift, and go to state 154


State 143

   18 body: BRACES_INITIATOR stmlist BRACES_TERMINATOR .

    $default  reduce using rule 18 (body)


State 144

   77 init: TYPE ID ITERATOR . range

    ID                  shift, and go to state 155
    BRACKETS_INITIATOR  shift, and go to state 156

    range  go to state 157


State 145

   76 for: FOR PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR body .

    $default  reduce using rule 76 (for)


State 146

   72 elif_opt: expr body .

    $default  reduce using rule 72 (elif_opt)


State 147

   74 else_opt: body .

    $default  reduce using rule 74 (else_opt)


State 148

   70 if_opt: elif_opt else_opt .

    $default  reduce using rule 70 (if_opt)


State 149

   19 funcdef: DEF field PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR body .

    $default  reduce using rule 19 (funcdef)


State 150

   21 paramlist: param COMMA paramlist .

    $default  reduce using rule 21 (paramlist)


State 151

   43 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID ASSIGN . BRACKETS_INITIATOR values BRACKETS_TERMINATOR

    BRACKETS_INITIATOR  shift, and go to state 158


State 152

   42 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID BRACKETS_INITIATOR . VALUE BRACKETS_TERMINATOR

    VALUE  shift, and go to state 159


State 153

   25 fieldlist: field SEMICOLON fieldlist .

    $default  reduce using rule 25 (fieldlist)


State 154

   37 tuple_decl: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN . PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 160


State 155

   79 range: ID .

    $default  reduce using rule 79 (range)


State 156

   78 range: BRACKETS_INITIATOR . expr COMMA expr BRACKETS_TERMINATOR

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 161
    attrlist  go to state 29
    val       go to state 30


State 157

   77 init: TYPE ID ITERATOR range .

    $default  reduce using rule 77 (init)


State 158

   43 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID ASSIGN BRACKETS_INITIATOR . values BRACKETS_TERMINATOR

    VALUE  shift, and go to state 162

    values  go to state 163


State 159

   42 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID BRACKETS_INITIATOR VALUE . BRACKETS_TERMINATOR

    BRACKETS_TERMINATOR  shift, and go to state 164


State 160

   37 tuple_decl: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR . exprlist PARENTHESES_TERMINATOR

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    exprlist  go to state 165
    expr      go to state 166
    attrlist  go to state 29
    val       go to state 30


State 161

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr
   78 range: BRACKETS_INITIATOR expr . COMMA expr BRACKETS_TERMINATOR

    COMMA              shift, and go to state 167
    EQUAL              shift, and go to state 66
    NOT_EQUAL          shift, and go to state 67
    LEQ                shift, and go to state 68
    GEQ                shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    LESS_THAN          shift, and go to state 71
    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80


State 162

   44 values: VALUE .
   45       | VALUE . COMMA values

    COMMA  shift, and go to state 168

    $default  reduce using rule 44 (values)


State 163

   43 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID ASSIGN BRACKETS_INITIATOR values . BRACKETS_TERMINATOR

    BRACKETS_TERMINATOR  shift, and go to state 169


State 164

   42 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR .

    $default  reduce using rule 42 (array_decl)


State 165

   37 tuple_decl: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist . PARENTHESES_TERMINATOR
   41 exprlist: exprlist . COMMA expr

    COMMA                   shift, and go to state 170
    PARENTHESES_TERMINATOR  shift, and go to state 171


State 166

   40 exprlist: expr .
   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    EQUAL              shift, and go to state 66
    NOT_EQUAL          shift, and go to state 67
    LEQ                shift, and go to state 68
    GEQ                shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    LESS_THAN          shift, and go to state 71
    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    $default  reduce using rule 40 (exprlist)


State 167

   78 range: BRACKETS_INITIATOR expr COMMA . expr BRACKETS_TERMINATOR

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 172
    attrlist  go to state 29
    val       go to state 30


State 168

   45 values: VALUE COMMA . values

    VALUE  shift, and go to state 162

    values  go to state 173


State 169

   43 array_decl: ARRAY LESS_THAN TYPE GREATER_THAN ID ASSIGN BRACKETS_INITIATOR values BRACKETS_TERMINATOR .

    $default  reduce using rule 43 (array_decl)


State 170

   41 exprlist: exprlist COMMA . expr

    ID                     shift, and go to state 53
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 174
    attrlist  go to state 29
    val       go to state 30


State 171

   37 tuple_decl: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR .

    $default  reduce using rule 37 (tuple_decl)


State 172

   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr
   78 range: BRACKETS_INITIATOR expr COMMA expr . BRACKETS_TERMINATOR

    BRACKETS_TERMINATOR  shift, and go to state 175
    EQUAL                shift, and go to state 66
    NOT_EQUAL            shift, and go to state 67
    LEQ                  shift, and go to state 68
    GEQ                  shift, and go to state 69
    GREATER_THAN         shift, and go to state 70
    LESS_THAN            shift, and go to state 71
    AND                  shift, and go to state 72
    OR                   shift, and go to state 73
    PLUS_OPERATOR        shift, and go to state 74
    MINUS_OPERATOR       shift, and go to state 75
    MULTI_OPERATOR       shift, and go to state 76
    DIVISION_OPERATOR    shift, and go to state 77
    MOD_OPERATOR         shift, and go to state 78
    POWER_OPERATOR       shift, and go to state 79
    CONCAT               shift, and go to state 80


State 173

   45 values: VALUE COMMA values .

    $default  reduce using rule 45 (values)


State 174

   41 exprlist: exprlist COMMA expr .
   47 expr: expr . PLUS_OPERATOR expr
   48     | expr . MINUS_OPERATOR expr
   49     | expr . MULTI_OPERATOR expr
   50     | expr . DIVISION_OPERATOR expr
   51     | expr . MOD_OPERATOR expr
   52     | expr . POWER_OPERATOR expr
   53     | expr . CONCAT expr
   54     | expr . EQUAL expr
   55     | expr . NOT_EQUAL expr
   56     | expr . LEQ expr
   57     | expr . GEQ expr
   58     | expr . LESS_THAN expr
   59     | expr . GREATER_THAN expr
   61     | expr . AND expr
   62     | expr . OR expr

    EQUAL              shift, and go to state 66
    NOT_EQUAL          shift, and go to state 67
    LEQ                shift, and go to state 68
    GEQ                shift, and go to state 69
    GREATER_THAN       shift, and go to state 70
    LESS_THAN          shift, and go to state 71
    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    PLUS_OPERATOR      shift, and go to state 74
    MINUS_OPERATOR     shift, and go to state 75
    MULTI_OPERATOR     shift, and go to state 76
    DIVISION_OPERATOR  shift, and go to state 77
    MOD_OPERATOR       shift, and go to state 78
    POWER_OPERATOR     shift, and go to state 79
    CONCAT             shift, and go to state 80

    $default  reduce using rule 41 (exprlist)


State 175

   78 range: BRACKETS_INITIATOR expr COMMA expr BRACKETS_TERMINATOR .

    $default  reduce using rule 78 (range)
