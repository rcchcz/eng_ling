Terminals unused in grammar

    LEN_STRING
    COMMENT


Grammar

    0 $accept: prog $end

    1 prog: stmlist

    2 stmlist: stm SEMICOLON
    3        | stm SEMICOLON stmlist

    4 stm: decl
    5    | assignment
    6    | expr
    7    | ID COPY_STRING expr
    8    | funcdef
    9    | WHILE expr body
   10    | FOR PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR body
   11    | if
   12    | BREAK
   13    | RETURN expr
   14    | IN PARENTHESES_INITIATOR ID PARENTHESES_TERMINATOR
   15    | OUT expr
   16    | STRUCT ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR
   17    | TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR
   18    | ARRAY BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR
   19    | OPEN PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR
   20    | CLOSE PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

   21 funcdef: DEF field PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR body

   22 if: IF expr body if_opt

   23 if_opt: elif_opt else_opt

   24 elif_opt: %empty
   25         | expr body

   26 else_opt: %empty
   27         | body

   28 body: BRACES_INITIATOR stmlist BRACES_TERMINATOR

   29 init: TYPE ID ITERATOR range

   30 range: BRACKETS_INITIATOR expr COMMA expr BRACKETS_TERMINATOR
   31      | ID

   32 decl: TYPE idlist

   33 idlist: decl_elem
   34       | decl_elem COMMA idlist

   35 decl_elem: ID
   36          | assignment

   37 assignment: ID ASSIGN expr

   38 types: TYPE
   39      | TYPE COMMA types

   40 paramlist: param
   41          | param COMMA paramlist

   42 param: %empty
   43      | field

   44 fieldlist: field SEMICOLON
   45          | field SEMICOLON fieldlist

   46 field: TYPE ID

   47 exprlist: expr
   48         | exprlist COMMA expr

   49 expr: val
   50     | expr PLUS_OPERATOR expr
   51     | expr MINUS_OPERATOR expr
   52     | expr MULTI_OPERATOR expr
   53     | expr DIVISION_OPERATOR expr
   54     | expr MOD_OPERATOR expr
   55     | expr POWER_OPERATOR expr
   56     | expr CONCAT expr
   57     | expr EQUAL expr
   58     | expr NOT_EQUAL expr
   59     | expr LEQ expr
   60     | expr GEQ expr
   61     | expr LESS_THAN expr
   62     | expr GREATER_THAN expr
   63     | NOT expr
   64     | expr AND expr
   65     | expr OR expr
   66     | PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR
   67     | attrlist

   68 attrlist: ID SEPARATOR ID
   69         | ID SEPARATOR attrlist

   70 val: ID
   71    | VALUE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sValue> (258) 7 14 16 17 29 31 35 37 46 68 69 70
    TYPE <sValue> (259) 29 32 38 39 46
    VALUE <sValue> (260) 18 71
    LEN_STRING <sValue> (261)
    ASSIGN (262) 17 37
    COMMENT (263)
    COMMA (264) 30 34 39 41 48
    SEMICOLON (265) 2 3 44 45
    SEPARATOR (266) 68 69
    DEF (267) 21
    ARRAY (268) 18
    STRUCT (269) 16
    TUPLE (270) 17
    WHILE (271) 9
    FOR (272) 10
    ITERATOR (273) 29
    IF (274) 22
    ELSE (275)
    ELIF (276)
    BREAK (277) 12
    RETURN (278) 13
    BRACES_INITIATOR (279) 16 28
    BRACES_TERMINATOR (280) 16 28
    BRACKETS_INITIATOR (281) 18 30
    BRACKETS_TERMINATOR (282) 18 30
    PARENTHESES_INITIATOR (283) 10 14 17 19 20 21 66
    PARENTHESES_TERMINATOR (284) 10 14 17 19 20 21 66
    IN (285) 14
    OUT (286) 15
    OPEN (287) 19
    CLOSE (288) 20
    EQUAL (289) 57
    NOT_EQUAL (290) 58
    LEQ (291) 59
    GEQ (292) 60
    GREATER_THAN (293) 62
    LESS_THAN (294) 61
    NOT (295) 63
    AND (296) 64
    OR (297) 65
    PLUS_OPERATOR (298) 50
    MINUS_OPERATOR (299) 51
    MULTI_OPERATOR (300) 52
    DIVISION_OPERATOR (301) 53
    MOD_OPERATOR (302) 54
    POWER_OPERATOR (303) 55
    CONCAT (304) 56
    COPY_STRING (305) 7


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    prog <sValue> (52)
        on left: 1
        on right: 0
    stmlist <sValue> (53)
        on left: 2 3
        on right: 1 3 28
    stm <sValue> (54)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
        on right: 2 3
    funcdef (55)
        on left: 21
        on right: 8
    if (56)
        on left: 22
        on right: 11
    if_opt (57)
        on left: 23
        on right: 22
    elif_opt (58)
        on left: 24 25
        on right: 23
    else_opt (59)
        on left: 26 27
        on right: 23
    body (60)
        on left: 28
        on right: 9 10 21 22 25 27
    init (61)
        on left: 29
        on right: 10
    range (62)
        on left: 30 31
        on right: 29
    decl (63)
        on left: 32
        on right: 4
    idlist (64)
        on left: 33 34
        on right: 32 34
    decl_elem (65)
        on left: 35 36
        on right: 33 34
    assignment (66)
        on left: 37
        on right: 5 36
    types (67)
        on left: 38 39
        on right: 17 39
    paramlist (68)
        on left: 40 41
        on right: 21 41
    param (69)
        on left: 42 43
        on right: 40 41
    fieldlist (70)
        on left: 44 45
        on right: 16 45
    field (71)
        on left: 46
        on right: 21 43 44 45
    exprlist (72)
        on left: 47 48
        on right: 17 48
    expr (73)
        on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
        on right: 6 7 9 13 15 22 25 30 37 47 48 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
    attrlist (74)
        on left: 68 69
        on right: 67 69
    val (75)
        on left: 70 71
        on right: 19 20 49


State 0

    0 $accept: . prog $end

    ID                     shift, and go to state 1
    TYPE                   shift, and go to state 2
    VALUE                  shift, and go to state 3
    DEF                    shift, and go to state 4
    ARRAY                  shift, and go to state 5
    STRUCT                 shift, and go to state 6
    TUPLE                  shift, and go to state 7
    WHILE                  shift, and go to state 8
    FOR                    shift, and go to state 9
    IF                     shift, and go to state 10
    BREAK                  shift, and go to state 11
    RETURN                 shift, and go to state 12
    PARENTHESES_INITIATOR  shift, and go to state 13
    IN                     shift, and go to state 14
    OUT                    shift, and go to state 15
    OPEN                   shift, and go to state 16
    CLOSE                  shift, and go to state 17
    NOT                    shift, and go to state 18

    prog        go to state 19
    stmlist     go to state 20
    stm         go to state 21
    funcdef     go to state 22
    if          go to state 23
    decl        go to state 24
    assignment  go to state 25
    expr        go to state 26
    attrlist    go to state 27
    val         go to state 28


State 1

    7 stm: ID . COPY_STRING expr
   37 assignment: ID . ASSIGN expr
   68 attrlist: ID . SEPARATOR ID
   69         | ID . SEPARATOR attrlist
   70 val: ID .

    ASSIGN       shift, and go to state 29
    SEPARATOR    shift, and go to state 30
    COPY_STRING  shift, and go to state 31

    $default  reduce using rule 70 (val)


State 2

   32 decl: TYPE . idlist

    ID  shift, and go to state 32

    idlist      go to state 33
    decl_elem   go to state 34
    assignment  go to state 35


State 3

   71 val: VALUE .

    $default  reduce using rule 71 (val)


State 4

   21 funcdef: DEF . field PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR body

    TYPE  shift, and go to state 36

    field  go to state 37


State 5

   18 stm: ARRAY . BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR

    BRACKETS_INITIATOR  shift, and go to state 38


State 6

   16 stm: STRUCT . ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR

    ID  shift, and go to state 39


State 7

   17 stm: TUPLE . PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 40


State 8

    9 stm: WHILE . expr body

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 42
    attrlist  go to state 27
    val       go to state 28


State 9

   10 stm: FOR . PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR body

    PARENTHESES_INITIATOR  shift, and go to state 43


State 10

   22 if: IF . expr body if_opt

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 44
    attrlist  go to state 27
    val       go to state 28


State 11

   12 stm: BREAK .

    $default  reduce using rule 12 (stm)


State 12

   13 stm: RETURN . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 45
    attrlist  go to state 27
    val       go to state 28


State 13

   66 expr: PARENTHESES_INITIATOR . expr PARENTHESES_TERMINATOR

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 46
    attrlist  go to state 27
    val       go to state 28


State 14

   14 stm: IN . PARENTHESES_INITIATOR ID PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 47


State 15

   15 stm: OUT . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 48
    attrlist  go to state 27
    val       go to state 28


State 16

   19 stm: OPEN . PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 49


State 17

   20 stm: CLOSE . PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 50


State 18

   63 expr: NOT . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 51
    attrlist  go to state 27
    val       go to state 28


State 19

    0 $accept: prog . $end

    $end  shift, and go to state 52


State 20

    1 prog: stmlist .

    $default  reduce using rule 1 (prog)


State 21

    2 stmlist: stm . SEMICOLON
    3        | stm . SEMICOLON stmlist

    SEMICOLON  shift, and go to state 53


State 22

    8 stm: funcdef .

    $default  reduce using rule 8 (stm)


State 23

   11 stm: if .

    $default  reduce using rule 11 (stm)


State 24

    4 stm: decl .

    $default  reduce using rule 4 (stm)


State 25

    5 stm: assignment .

    $default  reduce using rule 5 (stm)


State 26

    6 stm: expr .
   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    EQUAL              shift, and go to state 54
    NOT_EQUAL          shift, and go to state 55
    LEQ                shift, and go to state 56
    GEQ                shift, and go to state 57
    GREATER_THAN       shift, and go to state 58
    LESS_THAN          shift, and go to state 59
    AND                shift, and go to state 60
    OR                 shift, and go to state 61
    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    $default  reduce using rule 6 (stm)


State 27

   67 expr: attrlist .

    $default  reduce using rule 67 (expr)


State 28

   49 expr: val .

    $default  reduce using rule 49 (expr)


State 29

   37 assignment: ID ASSIGN . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 69
    attrlist  go to state 27
    val       go to state 28


State 30

   68 attrlist: ID SEPARATOR . ID
   69         | ID SEPARATOR . attrlist

    ID  shift, and go to state 70

    attrlist  go to state 71


State 31

    7 stm: ID COPY_STRING . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 72
    attrlist  go to state 27
    val       go to state 28


State 32

   35 decl_elem: ID .
   37 assignment: ID . ASSIGN expr

    ASSIGN  shift, and go to state 29

    $default  reduce using rule 35 (decl_elem)


State 33

   32 decl: TYPE idlist .

    $default  reduce using rule 32 (decl)


State 34

   33 idlist: decl_elem .
   34       | decl_elem . COMMA idlist

    COMMA  shift, and go to state 73

    $default  reduce using rule 33 (idlist)


State 35

   36 decl_elem: assignment .

    $default  reduce using rule 36 (decl_elem)


State 36

   46 field: TYPE . ID

    ID  shift, and go to state 74


State 37

   21 funcdef: DEF field . PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR body

    PARENTHESES_INITIATOR  shift, and go to state 75


State 38

   18 stm: ARRAY BRACKETS_INITIATOR . VALUE BRACKETS_TERMINATOR

    VALUE  shift, and go to state 76


State 39

   16 stm: STRUCT ID . BRACES_INITIATOR fieldlist BRACES_TERMINATOR

    BRACES_INITIATOR  shift, and go to state 77


State 40

   17 stm: TUPLE PARENTHESES_INITIATOR . types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    TYPE  shift, and go to state 78

    types  go to state 79


State 41

   68 attrlist: ID . SEPARATOR ID
   69         | ID . SEPARATOR attrlist
   70 val: ID .

    SEPARATOR  shift, and go to state 30

    $default  reduce using rule 70 (val)


State 42

    9 stm: WHILE expr . body
   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    BRACES_INITIATOR   shift, and go to state 80
    EQUAL              shift, and go to state 54
    NOT_EQUAL          shift, and go to state 55
    LEQ                shift, and go to state 56
    GEQ                shift, and go to state 57
    GREATER_THAN       shift, and go to state 58
    LESS_THAN          shift, and go to state 59
    AND                shift, and go to state 60
    OR                 shift, and go to state 61
    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    body  go to state 81


State 43

   10 stm: FOR PARENTHESES_INITIATOR . init PARENTHESES_TERMINATOR body

    TYPE  shift, and go to state 82

    init  go to state 83


State 44

   22 if: IF expr . body if_opt
   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    BRACES_INITIATOR   shift, and go to state 80
    EQUAL              shift, and go to state 54
    NOT_EQUAL          shift, and go to state 55
    LEQ                shift, and go to state 56
    GEQ                shift, and go to state 57
    GREATER_THAN       shift, and go to state 58
    LESS_THAN          shift, and go to state 59
    AND                shift, and go to state 60
    OR                 shift, and go to state 61
    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    body  go to state 84


State 45

   13 stm: RETURN expr .
   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    EQUAL              shift, and go to state 54
    NOT_EQUAL          shift, and go to state 55
    LEQ                shift, and go to state 56
    GEQ                shift, and go to state 57
    GREATER_THAN       shift, and go to state 58
    LESS_THAN          shift, and go to state 59
    AND                shift, and go to state 60
    OR                 shift, and go to state 61
    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    $default  reduce using rule 13 (stm)


State 46

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | PARENTHESES_INITIATOR expr . PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 85
    EQUAL                   shift, and go to state 54
    NOT_EQUAL               shift, and go to state 55
    LEQ                     shift, and go to state 56
    GEQ                     shift, and go to state 57
    GREATER_THAN            shift, and go to state 58
    LESS_THAN               shift, and go to state 59
    AND                     shift, and go to state 60
    OR                      shift, and go to state 61
    PLUS_OPERATOR           shift, and go to state 62
    MINUS_OPERATOR          shift, and go to state 63
    MULTI_OPERATOR          shift, and go to state 64
    DIVISION_OPERATOR       shift, and go to state 65
    MOD_OPERATOR            shift, and go to state 66
    POWER_OPERATOR          shift, and go to state 67
    CONCAT                  shift, and go to state 68


State 47

   14 stm: IN PARENTHESES_INITIATOR . ID PARENTHESES_TERMINATOR

    ID  shift, and go to state 86


State 48

   15 stm: OUT expr .
   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    EQUAL              shift, and go to state 54
    NOT_EQUAL          shift, and go to state 55
    LEQ                shift, and go to state 56
    GEQ                shift, and go to state 57
    GREATER_THAN       shift, and go to state 58
    LESS_THAN          shift, and go to state 59
    AND                shift, and go to state 60
    OR                 shift, and go to state 61
    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    $default  reduce using rule 15 (stm)


State 49

   19 stm: OPEN PARENTHESES_INITIATOR . val PARENTHESES_TERMINATOR

    ID     shift, and go to state 87
    VALUE  shift, and go to state 3

    val  go to state 88


State 50

   20 stm: CLOSE PARENTHESES_INITIATOR . val PARENTHESES_TERMINATOR

    ID     shift, and go to state 87
    VALUE  shift, and go to state 3

    val  go to state 89


State 51

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   63     | NOT expr .
   64     | expr . AND expr
   65     | expr . OR expr

    EQUAL              shift, and go to state 54
    NOT_EQUAL          shift, and go to state 55
    LEQ                shift, and go to state 56
    GEQ                shift, and go to state 57
    GREATER_THAN       shift, and go to state 58
    LESS_THAN          shift, and go to state 59
    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    $default  reduce using rule 63 (expr)


State 52

    0 $accept: prog $end .

    $default  accept


State 53

    2 stmlist: stm SEMICOLON .
    3        | stm SEMICOLON . stmlist

    ID                     shift, and go to state 1
    TYPE                   shift, and go to state 2
    VALUE                  shift, and go to state 3
    DEF                    shift, and go to state 4
    ARRAY                  shift, and go to state 5
    STRUCT                 shift, and go to state 6
    TUPLE                  shift, and go to state 7
    WHILE                  shift, and go to state 8
    FOR                    shift, and go to state 9
    IF                     shift, and go to state 10
    BREAK                  shift, and go to state 11
    RETURN                 shift, and go to state 12
    PARENTHESES_INITIATOR  shift, and go to state 13
    IN                     shift, and go to state 14
    OUT                    shift, and go to state 15
    OPEN                   shift, and go to state 16
    CLOSE                  shift, and go to state 17
    NOT                    shift, and go to state 18

    $default  reduce using rule 2 (stmlist)

    stmlist     go to state 90
    stm         go to state 21
    funcdef     go to state 22
    if          go to state 23
    decl        go to state 24
    assignment  go to state 25
    expr        go to state 26
    attrlist    go to state 27
    val         go to state 28


State 54

   57 expr: expr EQUAL . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 91
    attrlist  go to state 27
    val       go to state 28


State 55

   58 expr: expr NOT_EQUAL . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 92
    attrlist  go to state 27
    val       go to state 28


State 56

   59 expr: expr LEQ . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 93
    attrlist  go to state 27
    val       go to state 28


State 57

   60 expr: expr GEQ . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 94
    attrlist  go to state 27
    val       go to state 28


State 58

   62 expr: expr GREATER_THAN . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 95
    attrlist  go to state 27
    val       go to state 28


State 59

   61 expr: expr LESS_THAN . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 96
    attrlist  go to state 27
    val       go to state 28


State 60

   64 expr: expr AND . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 97
    attrlist  go to state 27
    val       go to state 28


State 61

   65 expr: expr OR . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 98
    attrlist  go to state 27
    val       go to state 28


State 62

   50 expr: expr PLUS_OPERATOR . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 99
    attrlist  go to state 27
    val       go to state 28


State 63

   51 expr: expr MINUS_OPERATOR . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 100
    attrlist  go to state 27
    val       go to state 28


State 64

   52 expr: expr MULTI_OPERATOR . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 101
    attrlist  go to state 27
    val       go to state 28


State 65

   53 expr: expr DIVISION_OPERATOR . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 102
    attrlist  go to state 27
    val       go to state 28


State 66

   54 expr: expr MOD_OPERATOR . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 103
    attrlist  go to state 27
    val       go to state 28


State 67

   55 expr: expr POWER_OPERATOR . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 104
    attrlist  go to state 27
    val       go to state 28


State 68

   56 expr: expr CONCAT . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 105
    attrlist  go to state 27
    val       go to state 28


State 69

   37 assignment: ID ASSIGN expr .
   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    EQUAL              shift, and go to state 54
    NOT_EQUAL          shift, and go to state 55
    LEQ                shift, and go to state 56
    GEQ                shift, and go to state 57
    GREATER_THAN       shift, and go to state 58
    LESS_THAN          shift, and go to state 59
    AND                shift, and go to state 60
    OR                 shift, and go to state 61
    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    $default  reduce using rule 37 (assignment)


State 70

   68 attrlist: ID . SEPARATOR ID
   68         | ID SEPARATOR ID .
   69         | ID . SEPARATOR attrlist

    SEPARATOR  shift, and go to state 30

    $default  reduce using rule 68 (attrlist)


State 71

   69 attrlist: ID SEPARATOR attrlist .

    $default  reduce using rule 69 (attrlist)


State 72

    7 stm: ID COPY_STRING expr .
   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    EQUAL              shift, and go to state 54
    NOT_EQUAL          shift, and go to state 55
    LEQ                shift, and go to state 56
    GEQ                shift, and go to state 57
    GREATER_THAN       shift, and go to state 58
    LESS_THAN          shift, and go to state 59
    AND                shift, and go to state 60
    OR                 shift, and go to state 61
    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    $default  reduce using rule 7 (stm)


State 73

   34 idlist: decl_elem COMMA . idlist

    ID  shift, and go to state 32

    idlist      go to state 106
    decl_elem   go to state 34
    assignment  go to state 35


State 74

   46 field: TYPE ID .

    $default  reduce using rule 46 (field)


State 75

   21 funcdef: DEF field PARENTHESES_INITIATOR . paramlist PARENTHESES_TERMINATOR body

    TYPE  shift, and go to state 36

    $default  reduce using rule 42 (param)

    paramlist  go to state 107
    param      go to state 108
    field      go to state 109


State 76

   18 stm: ARRAY BRACKETS_INITIATOR VALUE . BRACKETS_TERMINATOR

    BRACKETS_TERMINATOR  shift, and go to state 110


State 77

   16 stm: STRUCT ID BRACES_INITIATOR . fieldlist BRACES_TERMINATOR

    TYPE  shift, and go to state 36

    fieldlist  go to state 111
    field      go to state 112


State 78

   38 types: TYPE .
   39      | TYPE . COMMA types

    COMMA  shift, and go to state 113

    $default  reduce using rule 38 (types)


State 79

   17 stm: TUPLE PARENTHESES_INITIATOR types . PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 114


State 80

   28 body: BRACES_INITIATOR . stmlist BRACES_TERMINATOR

    ID                     shift, and go to state 1
    TYPE                   shift, and go to state 2
    VALUE                  shift, and go to state 3
    DEF                    shift, and go to state 4
    ARRAY                  shift, and go to state 5
    STRUCT                 shift, and go to state 6
    TUPLE                  shift, and go to state 7
    WHILE                  shift, and go to state 8
    FOR                    shift, and go to state 9
    IF                     shift, and go to state 10
    BREAK                  shift, and go to state 11
    RETURN                 shift, and go to state 12
    PARENTHESES_INITIATOR  shift, and go to state 13
    IN                     shift, and go to state 14
    OUT                    shift, and go to state 15
    OPEN                   shift, and go to state 16
    CLOSE                  shift, and go to state 17
    NOT                    shift, and go to state 18

    stmlist     go to state 115
    stm         go to state 21
    funcdef     go to state 22
    if          go to state 23
    decl        go to state 24
    assignment  go to state 25
    expr        go to state 26
    attrlist    go to state 27
    val         go to state 28


State 81

    9 stm: WHILE expr body .

    $default  reduce using rule 9 (stm)


State 82

   29 init: TYPE . ID ITERATOR range

    ID  shift, and go to state 116


State 83

   10 stm: FOR PARENTHESES_INITIATOR init . PARENTHESES_TERMINATOR body

    PARENTHESES_TERMINATOR  shift, and go to state 117


State 84

   22 if: IF expr body . if_opt

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    $default  reduce using rule 24 (elif_opt)

    if_opt    go to state 118
    elif_opt  go to state 119
    expr      go to state 120
    attrlist  go to state 27
    val       go to state 28


State 85

   66 expr: PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR .

    $default  reduce using rule 66 (expr)


State 86

   14 stm: IN PARENTHESES_INITIATOR ID . PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 121


State 87

   70 val: ID .

    $default  reduce using rule 70 (val)


State 88

   19 stm: OPEN PARENTHESES_INITIATOR val . PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 122


State 89

   20 stm: CLOSE PARENTHESES_INITIATOR val . PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 123


State 90

    3 stmlist: stm SEMICOLON stmlist .

    $default  reduce using rule 3 (stmlist)


State 91

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   57     | expr EQUAL expr .
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 57 (expr)


State 92

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   58     | expr NOT_EQUAL expr .
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 58 (expr)


State 93

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   59     | expr LEQ expr .
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 59 (expr)


State 94

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   60     | expr GEQ expr .
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 60 (expr)


State 95

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   62     | expr GREATER_THAN expr .
   64     | expr . AND expr
   65     | expr . OR expr

    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 62 (expr)


State 96

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   61     | expr LESS_THAN expr .
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 61 (expr)


State 97

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   64     | expr AND expr .
   65     | expr . OR expr

    EQUAL              shift, and go to state 54
    NOT_EQUAL          shift, and go to state 55
    LEQ                shift, and go to state 56
    GEQ                shift, and go to state 57
    GREATER_THAN       shift, and go to state 58
    LESS_THAN          shift, and go to state 59
    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    $default  reduce using rule 64 (expr)


State 98

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr
   65     | expr OR expr .

    EQUAL              shift, and go to state 54
    NOT_EQUAL          shift, and go to state 55
    LEQ                shift, and go to state 56
    GEQ                shift, and go to state 57
    GREATER_THAN       shift, and go to state 58
    LESS_THAN          shift, and go to state 59
    AND                shift, and go to state 60
    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    $default  reduce using rule 65 (expr)


State 99

   50 expr: expr . PLUS_OPERATOR expr
   50     | expr PLUS_OPERATOR expr .
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    $default  reduce using rule 50 (expr)


State 100

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   51     | expr MINUS_OPERATOR expr .
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    $default  reduce using rule 51 (expr)


State 101

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   52     | expr MULTI_OPERATOR expr .
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    CONCAT  shift, and go to state 68

    $default  reduce using rule 52 (expr)


State 102

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   53     | expr DIVISION_OPERATOR expr .
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    CONCAT  shift, and go to state 68

    $default  reduce using rule 53 (expr)


State 103

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   54     | expr MOD_OPERATOR expr .
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    CONCAT  shift, and go to state 68

    $default  reduce using rule 54 (expr)


State 104

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   55     | expr POWER_OPERATOR expr .
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    CONCAT  shift, and go to state 68

    $default  reduce using rule 55 (expr)


State 105

   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   56     | expr CONCAT expr .
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    CONCAT  error (nonassociative)

    $default  reduce using rule 56 (expr)


State 106

   34 idlist: decl_elem COMMA idlist .

    $default  reduce using rule 34 (idlist)


State 107

   21 funcdef: DEF field PARENTHESES_INITIATOR paramlist . PARENTHESES_TERMINATOR body

    PARENTHESES_TERMINATOR  shift, and go to state 124


State 108

   40 paramlist: param .
   41          | param . COMMA paramlist

    COMMA  shift, and go to state 125

    $default  reduce using rule 40 (paramlist)


State 109

   43 param: field .

    $default  reduce using rule 43 (param)


State 110

   18 stm: ARRAY BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR .

    $default  reduce using rule 18 (stm)


State 111

   16 stm: STRUCT ID BRACES_INITIATOR fieldlist . BRACES_TERMINATOR

    BRACES_TERMINATOR  shift, and go to state 126


State 112

   44 fieldlist: field . SEMICOLON
   45          | field . SEMICOLON fieldlist

    SEMICOLON  shift, and go to state 127


State 113

   39 types: TYPE COMMA . types

    TYPE  shift, and go to state 78

    types  go to state 128


State 114

   17 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR . ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    ID  shift, and go to state 129


State 115

   28 body: BRACES_INITIATOR stmlist . BRACES_TERMINATOR

    BRACES_TERMINATOR  shift, and go to state 130


State 116

   29 init: TYPE ID . ITERATOR range

    ITERATOR  shift, and go to state 131


State 117

   10 stm: FOR PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR . body

    BRACES_INITIATOR  shift, and go to state 80

    body  go to state 132


State 118

   22 if: IF expr body if_opt .

    $default  reduce using rule 22 (if)


State 119

   23 if_opt: elif_opt . else_opt

    BRACES_INITIATOR  shift, and go to state 80

    $default  reduce using rule 26 (else_opt)

    else_opt  go to state 133
    body      go to state 134


State 120

   25 elif_opt: expr . body
   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    BRACES_INITIATOR   shift, and go to state 80
    EQUAL              shift, and go to state 54
    NOT_EQUAL          shift, and go to state 55
    LEQ                shift, and go to state 56
    GEQ                shift, and go to state 57
    GREATER_THAN       shift, and go to state 58
    LESS_THAN          shift, and go to state 59
    AND                shift, and go to state 60
    OR                 shift, and go to state 61
    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    body  go to state 135


State 121

   14 stm: IN PARENTHESES_INITIATOR ID PARENTHESES_TERMINATOR .

    $default  reduce using rule 14 (stm)


State 122

   19 stm: OPEN PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR .

    $default  reduce using rule 19 (stm)


State 123

   20 stm: CLOSE PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR .

    $default  reduce using rule 20 (stm)


State 124

   21 funcdef: DEF field PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR . body

    BRACES_INITIATOR  shift, and go to state 80

    body  go to state 136


State 125

   41 paramlist: param COMMA . paramlist

    TYPE  shift, and go to state 36

    $default  reduce using rule 42 (param)

    paramlist  go to state 137
    param      go to state 108
    field      go to state 109


State 126

   16 stm: STRUCT ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR .

    $default  reduce using rule 16 (stm)


State 127

   44 fieldlist: field SEMICOLON .
   45          | field SEMICOLON . fieldlist

    TYPE  shift, and go to state 36

    $default  reduce using rule 44 (fieldlist)

    fieldlist  go to state 138
    field      go to state 112


State 128

   39 types: TYPE COMMA types .

    $default  reduce using rule 39 (types)


State 129

   17 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID . ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    ASSIGN  shift, and go to state 139


State 130

   28 body: BRACES_INITIATOR stmlist BRACES_TERMINATOR .

    $default  reduce using rule 28 (body)


State 131

   29 init: TYPE ID ITERATOR . range

    ID                  shift, and go to state 140
    BRACKETS_INITIATOR  shift, and go to state 141

    range  go to state 142


State 132

   10 stm: FOR PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR body .

    $default  reduce using rule 10 (stm)


State 133

   23 if_opt: elif_opt else_opt .

    $default  reduce using rule 23 (if_opt)


State 134

   27 else_opt: body .

    $default  reduce using rule 27 (else_opt)


State 135

   25 elif_opt: expr body .

    $default  reduce using rule 25 (elif_opt)


State 136

   21 funcdef: DEF field PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR body .

    $default  reduce using rule 21 (funcdef)


State 137

   41 paramlist: param COMMA paramlist .

    $default  reduce using rule 41 (paramlist)


State 138

   45 fieldlist: field SEMICOLON fieldlist .

    $default  reduce using rule 45 (fieldlist)


State 139

   17 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN . PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 143


State 140

   31 range: ID .

    $default  reduce using rule 31 (range)


State 141

   30 range: BRACKETS_INITIATOR . expr COMMA expr BRACKETS_TERMINATOR

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 144
    attrlist  go to state 27
    val       go to state 28


State 142

   29 init: TYPE ID ITERATOR range .

    $default  reduce using rule 29 (init)


State 143

   17 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR . exprlist PARENTHESES_TERMINATOR

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    exprlist  go to state 145
    expr      go to state 146
    attrlist  go to state 27
    val       go to state 28


State 144

   30 range: BRACKETS_INITIATOR expr . COMMA expr BRACKETS_TERMINATOR
   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    COMMA              shift, and go to state 147
    EQUAL              shift, and go to state 54
    NOT_EQUAL          shift, and go to state 55
    LEQ                shift, and go to state 56
    GEQ                shift, and go to state 57
    GREATER_THAN       shift, and go to state 58
    LESS_THAN          shift, and go to state 59
    AND                shift, and go to state 60
    OR                 shift, and go to state 61
    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68


State 145

   17 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist . PARENTHESES_TERMINATOR
   48 exprlist: exprlist . COMMA expr

    COMMA                   shift, and go to state 148
    PARENTHESES_TERMINATOR  shift, and go to state 149


State 146

   47 exprlist: expr .
   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    EQUAL              shift, and go to state 54
    NOT_EQUAL          shift, and go to state 55
    LEQ                shift, and go to state 56
    GEQ                shift, and go to state 57
    GREATER_THAN       shift, and go to state 58
    LESS_THAN          shift, and go to state 59
    AND                shift, and go to state 60
    OR                 shift, and go to state 61
    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    $default  reduce using rule 47 (exprlist)


State 147

   30 range: BRACKETS_INITIATOR expr COMMA . expr BRACKETS_TERMINATOR

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 150
    attrlist  go to state 27
    val       go to state 28


State 148

   48 exprlist: exprlist COMMA . expr

    ID                     shift, and go to state 41
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 151
    attrlist  go to state 27
    val       go to state 28


State 149

   17 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR .

    $default  reduce using rule 17 (stm)


State 150

   30 range: BRACKETS_INITIATOR expr COMMA expr . BRACKETS_TERMINATOR
   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    BRACKETS_TERMINATOR  shift, and go to state 152
    EQUAL                shift, and go to state 54
    NOT_EQUAL            shift, and go to state 55
    LEQ                  shift, and go to state 56
    GEQ                  shift, and go to state 57
    GREATER_THAN         shift, and go to state 58
    LESS_THAN            shift, and go to state 59
    AND                  shift, and go to state 60
    OR                   shift, and go to state 61
    PLUS_OPERATOR        shift, and go to state 62
    MINUS_OPERATOR       shift, and go to state 63
    MULTI_OPERATOR       shift, and go to state 64
    DIVISION_OPERATOR    shift, and go to state 65
    MOD_OPERATOR         shift, and go to state 66
    POWER_OPERATOR       shift, and go to state 67
    CONCAT               shift, and go to state 68


State 151

   48 exprlist: exprlist COMMA expr .
   50 expr: expr . PLUS_OPERATOR expr
   51     | expr . MINUS_OPERATOR expr
   52     | expr . MULTI_OPERATOR expr
   53     | expr . DIVISION_OPERATOR expr
   54     | expr . MOD_OPERATOR expr
   55     | expr . POWER_OPERATOR expr
   56     | expr . CONCAT expr
   57     | expr . EQUAL expr
   58     | expr . NOT_EQUAL expr
   59     | expr . LEQ expr
   60     | expr . GEQ expr
   61     | expr . LESS_THAN expr
   62     | expr . GREATER_THAN expr
   64     | expr . AND expr
   65     | expr . OR expr

    EQUAL              shift, and go to state 54
    NOT_EQUAL          shift, and go to state 55
    LEQ                shift, and go to state 56
    GEQ                shift, and go to state 57
    GREATER_THAN       shift, and go to state 58
    LESS_THAN          shift, and go to state 59
    AND                shift, and go to state 60
    OR                 shift, and go to state 61
    PLUS_OPERATOR      shift, and go to state 62
    MINUS_OPERATOR     shift, and go to state 63
    MULTI_OPERATOR     shift, and go to state 64
    DIVISION_OPERATOR  shift, and go to state 65
    MOD_OPERATOR       shift, and go to state 66
    POWER_OPERATOR     shift, and go to state 67
    CONCAT             shift, and go to state 68

    $default  reduce using rule 48 (exprlist)


State 152

   30 range: BRACKETS_INITIATOR expr COMMA expr BRACKETS_TERMINATOR .

    $default  reduce using rule 30 (range)
