Terminals unused in grammar

    LEN_STRING
    COMMENT


Grammar

    0 $accept: prog $end

    1 prog: stmlist

    2 stmlist: stm SEMICOLON
    3        | stm SEMICOLON stmlist

    4 stm: TYPE ids
    5    | TYPE ID ASSIGN expr
    6    | ID ASSIGN expr
    7    | expr
    8    | ID COPY_STRING expr
    9    | DEF TYPE ID PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR
   10    | WHILE expr BRACES_INITIATOR stmlist BRACES_TERMINATOR
   11    | FOR PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR body
   12    | IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body
   13    | IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELSE body
   14    | IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body body
   15    | BREAK
   16    | RETURN expr
   17    | IN PARENTHESES_INITIATOR ID PARENTHESES_TERMINATOR
   18    | OUT expr
   19    | STRUCT ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR
   20    | TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR
   21    | ARRAY BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR
   22    | OPEN PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR
   23    | CLOSE PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

   24 body: BRACES_INITIATOR stmlist BRACES_TERMINATOR

   25 init: TYPE ID ITERATOR range

   26 range: BRACKETS_INITIATOR expr COMMA expr BRACKETS_TERMINATOR
   27      | ID

   28 ids: ID
   29    | decl ids

   30 decl: ID COMMA
   31     | ID ASSIGN expr COMMA

   32 types: TYPE
   33      | TYPE COMMA types

   34 paramlist: param
   35          | param COMMA paramlist

   36 param: ε
   37      | TYPE ID

   38 fieldlist: field SEMICOLON
   39          | field SEMICOLON fieldlist

   40 field: TYPE ID

   41 exprlist: expr
   42         | exprlist COMMA expr

   43 expr: val
   44     | expr PLUS_OPERATOR expr
   45     | expr MINUS_OPERATOR expr
   46     | expr MULTI_OPERATOR expr
   47     | expr DIVISION_OPERATOR expr
   48     | expr MOD_OPERATOR expr
   49     | expr POWER_OPERATOR expr
   50     | expr CONCAT expr
   51     | expr EQUAL expr
   52     | expr NOT_EQUAL expr
   53     | expr LEQ expr
   54     | expr GEQ expr
   55     | expr LESS_THAN expr
   56     | expr GREATER_THAN expr
   57     | NOT expr
   58     | expr AND expr
   59     | expr OR expr
   60     | PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR
   61     | attrlist

   62 attrlist: ID SEPARATOR ID
   63         | ID SEPARATOR attrlist

   64 val: ID
   65    | VALUE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sValue> (258) 5 6 8 9 17 19 20 25 27 28 30 31 37 40 62 63 64
    TYPE <sValue> (259) 4 5 9 25 32 33 37 40
    VALUE <sValue> (260) 21 65
    LEN_STRING <sValue> (261)
    ASSIGN (262) 5 6 20 31
    COMMENT (263)
    COMMA (264) 26 30 31 33 35 42
    SEMICOLON (265) 2 3 38 39
    SEPARATOR (266) 62 63
    DEF (267) 9
    ARRAY (268) 21
    STRUCT (269) 19
    TUPLE (270) 20
    WHILE (271) 10
    FOR (272) 11
    ITERATOR (273) 25
    IF (274) 12 13 14
    ELSE (275) 13
    ELIF (276) 12 13
    BREAK (277) 15
    RETURN (278) 16
    BRACES_INITIATOR (279) 9 10 19 24
    BRACES_TERMINATOR (280) 9 10 19 24
    BRACKETS_INITIATOR (281) 21 26
    BRACKETS_TERMINATOR (282) 21 26
    PARENTHESES_INITIATOR (283) 9 11 12 13 14 17 20 22 23 60
    PARENTHESES_TERMINATOR (284) 9 11 12 13 14 17 20 22 23 60
    IN (285) 17
    OUT (286) 18
    OPEN (287) 22
    CLOSE (288) 23
    EQUAL (289) 51
    NOT_EQUAL (290) 52
    LEQ (291) 53
    GEQ (292) 54
    GREATER_THAN (293) 56
    LESS_THAN (294) 55
    NOT (295) 57
    AND (296) 58
    OR (297) 59
    PLUS_OPERATOR (298) 44
    MINUS_OPERATOR (299) 45
    MULTI_OPERATOR (300) 46
    DIVISION_OPERATOR (301) 47
    MOD_OPERATOR (302) 48
    POWER_OPERATOR (303) 49
    CONCAT (304) 50
    COPY_STRING (305) 8


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    prog <sValue> (52)
        on left: 1
        on right: 0
    stmlist <sValue> (53)
        on left: 2 3
        on right: 1 3 9 10 24
    stm <sValue> (54)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 2 3
    body (55)
        on left: 24
        on right: 11 12 13 14
    init (56)
        on left: 25
        on right: 11
    range (57)
        on left: 26 27
        on right: 25
    ids (58)
        on left: 28 29
        on right: 4 29
    decl (59)
        on left: 30 31
        on right: 29
    types (60)
        on left: 32 33
        on right: 20 33
    paramlist (61)
        on left: 34 35
        on right: 9 35
    param (62)
        on left: 36 37
        on right: 34 35
    fieldlist (63)
        on left: 38 39
        on right: 19 39
    field (64)
        on left: 40
        on right: 38 39
    exprlist (65)
        on left: 41 42
        on right: 20 42
    expr (66)
        on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
        on right: 5 6 7 8 10 12 13 14 16 18 26 31 41 42 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    attrlist (67)
        on left: 62 63
        on right: 61 63
    val (68)
        on left: 64 65
        on right: 22 23 43


State 0

    0 $accept: • prog $end

    ID                     shift, and go to state 1
    TYPE                   shift, and go to state 2
    VALUE                  shift, and go to state 3
    DEF                    shift, and go to state 4
    ARRAY                  shift, and go to state 5
    STRUCT                 shift, and go to state 6
    TUPLE                  shift, and go to state 7
    WHILE                  shift, and go to state 8
    FOR                    shift, and go to state 9
    IF                     shift, and go to state 10
    BREAK                  shift, and go to state 11
    RETURN                 shift, and go to state 12
    PARENTHESES_INITIATOR  shift, and go to state 13
    IN                     shift, and go to state 14
    OUT                    shift, and go to state 15
    OPEN                   shift, and go to state 16
    CLOSE                  shift, and go to state 17
    NOT                    shift, and go to state 18

    prog      go to state 19
    stmlist   go to state 20
    stm       go to state 21
    expr      go to state 22
    attrlist  go to state 23
    val       go to state 24


State 1

    6 stm: ID • ASSIGN expr
    8    | ID • COPY_STRING expr
   62 attrlist: ID • SEPARATOR ID
   63         | ID • SEPARATOR attrlist
   64 val: ID •

    ASSIGN       shift, and go to state 25
    SEPARATOR    shift, and go to state 26
    COPY_STRING  shift, and go to state 27

    $default  reduce using rule 64 (val)


State 2

    4 stm: TYPE • ids
    5    | TYPE • ID ASSIGN expr

    ID  shift, and go to state 28

    ids   go to state 29
    decl  go to state 30


State 3

   65 val: VALUE •

    $default  reduce using rule 65 (val)


State 4

    9 stm: DEF • TYPE ID PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR

    TYPE  shift, and go to state 31


State 5

   21 stm: ARRAY • BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR

    BRACKETS_INITIATOR  shift, and go to state 32


State 6

   19 stm: STRUCT • ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR

    ID  shift, and go to state 33


State 7

   20 stm: TUPLE • PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 34


State 8

   10 stm: WHILE • expr BRACES_INITIATOR stmlist BRACES_TERMINATOR

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 36
    attrlist  go to state 23
    val       go to state 24


State 9

   11 stm: FOR • PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR body

    PARENTHESES_INITIATOR  shift, and go to state 37


State 10

   12 stm: IF • PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body
   13    | IF • PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELSE body
   14    | IF • PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body body

    PARENTHESES_INITIATOR  shift, and go to state 38


State 11

   15 stm: BREAK •

    $default  reduce using rule 15 (stm)


State 12

   16 stm: RETURN • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 39
    attrlist  go to state 23
    val       go to state 24


State 13

   60 expr: PARENTHESES_INITIATOR • expr PARENTHESES_TERMINATOR

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 40
    attrlist  go to state 23
    val       go to state 24


State 14

   17 stm: IN • PARENTHESES_INITIATOR ID PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 41


State 15

   18 stm: OUT • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 42
    attrlist  go to state 23
    val       go to state 24


State 16

   22 stm: OPEN • PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 43


State 17

   23 stm: CLOSE • PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 44


State 18

   57 expr: NOT • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 45
    attrlist  go to state 23
    val       go to state 24


State 19

    0 $accept: prog • $end

    $end  shift, and go to state 46


State 20

    1 prog: stmlist •

    $default  reduce using rule 1 (prog)


State 21

    2 stmlist: stm • SEMICOLON
    3        | stm • SEMICOLON stmlist

    SEMICOLON  shift, and go to state 47


State 22

    7 stm: expr •
   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    EQUAL              shift, and go to state 48
    NOT_EQUAL          shift, and go to state 49
    LEQ                shift, and go to state 50
    GEQ                shift, and go to state 51
    GREATER_THAN       shift, and go to state 52
    LESS_THAN          shift, and go to state 53
    AND                shift, and go to state 54
    OR                 shift, and go to state 55
    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    $default  reduce using rule 7 (stm)


State 23

   61 expr: attrlist •

    $default  reduce using rule 61 (expr)


State 24

   43 expr: val •

    $default  reduce using rule 43 (expr)


State 25

    6 stm: ID ASSIGN • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 63
    attrlist  go to state 23
    val       go to state 24


State 26

   62 attrlist: ID SEPARATOR • ID
   63         | ID SEPARATOR • attrlist

    ID  shift, and go to state 64

    attrlist  go to state 65


State 27

    8 stm: ID COPY_STRING • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 66
    attrlist  go to state 23
    val       go to state 24


State 28

    5 stm: TYPE ID • ASSIGN expr
   28 ids: ID •
   30 decl: ID • COMMA
   31     | ID • ASSIGN expr COMMA

    ASSIGN  shift, and go to state 67
    COMMA   shift, and go to state 68

    $default  reduce using rule 28 (ids)


State 29

    4 stm: TYPE ids •

    $default  reduce using rule 4 (stm)


State 30

   29 ids: decl • ids

    ID  shift, and go to state 69

    ids   go to state 70
    decl  go to state 30


State 31

    9 stm: DEF TYPE • ID PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR

    ID  shift, and go to state 71


State 32

   21 stm: ARRAY BRACKETS_INITIATOR • VALUE BRACKETS_TERMINATOR

    VALUE  shift, and go to state 72


State 33

   19 stm: STRUCT ID • BRACES_INITIATOR fieldlist BRACES_TERMINATOR

    BRACES_INITIATOR  shift, and go to state 73


State 34

   20 stm: TUPLE PARENTHESES_INITIATOR • types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    TYPE  shift, and go to state 74

    types  go to state 75


State 35

   62 attrlist: ID • SEPARATOR ID
   63         | ID • SEPARATOR attrlist
   64 val: ID •

    SEPARATOR  shift, and go to state 26

    $default  reduce using rule 64 (val)


State 36

   10 stm: WHILE expr • BRACES_INITIATOR stmlist BRACES_TERMINATOR
   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    BRACES_INITIATOR   shift, and go to state 76
    EQUAL              shift, and go to state 48
    NOT_EQUAL          shift, and go to state 49
    LEQ                shift, and go to state 50
    GEQ                shift, and go to state 51
    GREATER_THAN       shift, and go to state 52
    LESS_THAN          shift, and go to state 53
    AND                shift, and go to state 54
    OR                 shift, and go to state 55
    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62


State 37

   11 stm: FOR PARENTHESES_INITIATOR • init PARENTHESES_TERMINATOR body

    TYPE  shift, and go to state 77

    init  go to state 78


State 38

   12 stm: IF PARENTHESES_INITIATOR • expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body
   13    | IF PARENTHESES_INITIATOR • expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELSE body
   14    | IF PARENTHESES_INITIATOR • expr PARENTHESES_TERMINATOR body body

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 79
    attrlist  go to state 23
    val       go to state 24


State 39

   16 stm: RETURN expr •
   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    EQUAL              shift, and go to state 48
    NOT_EQUAL          shift, and go to state 49
    LEQ                shift, and go to state 50
    GEQ                shift, and go to state 51
    GREATER_THAN       shift, and go to state 52
    LESS_THAN          shift, and go to state 53
    AND                shift, and go to state 54
    OR                 shift, and go to state 55
    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    $default  reduce using rule 16 (stm)


State 40

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr
   60     | PARENTHESES_INITIATOR expr • PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 80
    EQUAL                   shift, and go to state 48
    NOT_EQUAL               shift, and go to state 49
    LEQ                     shift, and go to state 50
    GEQ                     shift, and go to state 51
    GREATER_THAN            shift, and go to state 52
    LESS_THAN               shift, and go to state 53
    AND                     shift, and go to state 54
    OR                      shift, and go to state 55
    PLUS_OPERATOR           shift, and go to state 56
    MINUS_OPERATOR          shift, and go to state 57
    MULTI_OPERATOR          shift, and go to state 58
    DIVISION_OPERATOR       shift, and go to state 59
    MOD_OPERATOR            shift, and go to state 60
    POWER_OPERATOR          shift, and go to state 61
    CONCAT                  shift, and go to state 62


State 41

   17 stm: IN PARENTHESES_INITIATOR • ID PARENTHESES_TERMINATOR

    ID  shift, and go to state 81


State 42

   18 stm: OUT expr •
   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    EQUAL              shift, and go to state 48
    NOT_EQUAL          shift, and go to state 49
    LEQ                shift, and go to state 50
    GEQ                shift, and go to state 51
    GREATER_THAN       shift, and go to state 52
    LESS_THAN          shift, and go to state 53
    AND                shift, and go to state 54
    OR                 shift, and go to state 55
    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    $default  reduce using rule 18 (stm)


State 43

   22 stm: OPEN PARENTHESES_INITIATOR • val PARENTHESES_TERMINATOR

    ID     shift, and go to state 82
    VALUE  shift, and go to state 3

    val  go to state 83


State 44

   23 stm: CLOSE PARENTHESES_INITIATOR • val PARENTHESES_TERMINATOR

    ID     shift, and go to state 82
    VALUE  shift, and go to state 3

    val  go to state 84


State 45

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   57     | NOT expr •
   58     | expr • AND expr
   59     | expr • OR expr

    EQUAL              shift, and go to state 48
    NOT_EQUAL          shift, and go to state 49
    LEQ                shift, and go to state 50
    GEQ                shift, and go to state 51
    GREATER_THAN       shift, and go to state 52
    LESS_THAN          shift, and go to state 53
    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    $default  reduce using rule 57 (expr)


State 46

    0 $accept: prog $end •

    $default  accept


State 47

    2 stmlist: stm SEMICOLON •
    3        | stm SEMICOLON • stmlist

    ID                     shift, and go to state 1
    TYPE                   shift, and go to state 2
    VALUE                  shift, and go to state 3
    DEF                    shift, and go to state 4
    ARRAY                  shift, and go to state 5
    STRUCT                 shift, and go to state 6
    TUPLE                  shift, and go to state 7
    WHILE                  shift, and go to state 8
    FOR                    shift, and go to state 9
    IF                     shift, and go to state 10
    BREAK                  shift, and go to state 11
    RETURN                 shift, and go to state 12
    PARENTHESES_INITIATOR  shift, and go to state 13
    IN                     shift, and go to state 14
    OUT                    shift, and go to state 15
    OPEN                   shift, and go to state 16
    CLOSE                  shift, and go to state 17
    NOT                    shift, and go to state 18

    $default  reduce using rule 2 (stmlist)

    stmlist   go to state 85
    stm       go to state 21
    expr      go to state 22
    attrlist  go to state 23
    val       go to state 24


State 48

   51 expr: expr EQUAL • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 86
    attrlist  go to state 23
    val       go to state 24


State 49

   52 expr: expr NOT_EQUAL • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 87
    attrlist  go to state 23
    val       go to state 24


State 50

   53 expr: expr LEQ • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 88
    attrlist  go to state 23
    val       go to state 24


State 51

   54 expr: expr GEQ • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 89
    attrlist  go to state 23
    val       go to state 24


State 52

   56 expr: expr GREATER_THAN • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 90
    attrlist  go to state 23
    val       go to state 24


State 53

   55 expr: expr LESS_THAN • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 91
    attrlist  go to state 23
    val       go to state 24


State 54

   58 expr: expr AND • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 92
    attrlist  go to state 23
    val       go to state 24


State 55

   59 expr: expr OR • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 93
    attrlist  go to state 23
    val       go to state 24


State 56

   44 expr: expr PLUS_OPERATOR • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 94
    attrlist  go to state 23
    val       go to state 24


State 57

   45 expr: expr MINUS_OPERATOR • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 95
    attrlist  go to state 23
    val       go to state 24


State 58

   46 expr: expr MULTI_OPERATOR • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 96
    attrlist  go to state 23
    val       go to state 24


State 59

   47 expr: expr DIVISION_OPERATOR • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 97
    attrlist  go to state 23
    val       go to state 24


State 60

   48 expr: expr MOD_OPERATOR • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 98
    attrlist  go to state 23
    val       go to state 24


State 61

   49 expr: expr POWER_OPERATOR • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 99
    attrlist  go to state 23
    val       go to state 24


State 62

   50 expr: expr CONCAT • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 100
    attrlist  go to state 23
    val       go to state 24


State 63

    6 stm: ID ASSIGN expr •
   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    EQUAL              shift, and go to state 48
    NOT_EQUAL          shift, and go to state 49
    LEQ                shift, and go to state 50
    GEQ                shift, and go to state 51
    GREATER_THAN       shift, and go to state 52
    LESS_THAN          shift, and go to state 53
    AND                shift, and go to state 54
    OR                 shift, and go to state 55
    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    $default  reduce using rule 6 (stm)


State 64

   62 attrlist: ID • SEPARATOR ID
   62         | ID SEPARATOR ID •
   63         | ID • SEPARATOR attrlist

    SEPARATOR  shift, and go to state 26

    $default  reduce using rule 62 (attrlist)


State 65

   63 attrlist: ID SEPARATOR attrlist •

    $default  reduce using rule 63 (attrlist)


State 66

    8 stm: ID COPY_STRING expr •
   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    EQUAL              shift, and go to state 48
    NOT_EQUAL          shift, and go to state 49
    LEQ                shift, and go to state 50
    GEQ                shift, and go to state 51
    GREATER_THAN       shift, and go to state 52
    LESS_THAN          shift, and go to state 53
    AND                shift, and go to state 54
    OR                 shift, and go to state 55
    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    $default  reduce using rule 8 (stm)


State 67

    5 stm: TYPE ID ASSIGN • expr
   31 decl: ID ASSIGN • expr COMMA

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 101
    attrlist  go to state 23
    val       go to state 24


State 68

   30 decl: ID COMMA •

    $default  reduce using rule 30 (decl)


State 69

   28 ids: ID •
   30 decl: ID • COMMA
   31     | ID • ASSIGN expr COMMA

    ASSIGN  shift, and go to state 102
    COMMA   shift, and go to state 68

    $default  reduce using rule 28 (ids)


State 70

   29 ids: decl ids •

    $default  reduce using rule 29 (ids)


State 71

    9 stm: DEF TYPE ID • PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 103


State 72

   21 stm: ARRAY BRACKETS_INITIATOR VALUE • BRACKETS_TERMINATOR

    BRACKETS_TERMINATOR  shift, and go to state 104


State 73

   19 stm: STRUCT ID BRACES_INITIATOR • fieldlist BRACES_TERMINATOR

    TYPE  shift, and go to state 105

    fieldlist  go to state 106
    field      go to state 107


State 74

   32 types: TYPE •
   33      | TYPE • COMMA types

    COMMA  shift, and go to state 108

    $default  reduce using rule 32 (types)


State 75

   20 stm: TUPLE PARENTHESES_INITIATOR types • PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 109


State 76

   10 stm: WHILE expr BRACES_INITIATOR • stmlist BRACES_TERMINATOR

    ID                     shift, and go to state 1
    TYPE                   shift, and go to state 2
    VALUE                  shift, and go to state 3
    DEF                    shift, and go to state 4
    ARRAY                  shift, and go to state 5
    STRUCT                 shift, and go to state 6
    TUPLE                  shift, and go to state 7
    WHILE                  shift, and go to state 8
    FOR                    shift, and go to state 9
    IF                     shift, and go to state 10
    BREAK                  shift, and go to state 11
    RETURN                 shift, and go to state 12
    PARENTHESES_INITIATOR  shift, and go to state 13
    IN                     shift, and go to state 14
    OUT                    shift, and go to state 15
    OPEN                   shift, and go to state 16
    CLOSE                  shift, and go to state 17
    NOT                    shift, and go to state 18

    stmlist   go to state 110
    stm       go to state 21
    expr      go to state 22
    attrlist  go to state 23
    val       go to state 24


State 77

   25 init: TYPE • ID ITERATOR range

    ID  shift, and go to state 111


State 78

   11 stm: FOR PARENTHESES_INITIATOR init • PARENTHESES_TERMINATOR body

    PARENTHESES_TERMINATOR  shift, and go to state 112


State 79

   12 stm: IF PARENTHESES_INITIATOR expr • PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body
   13    | IF PARENTHESES_INITIATOR expr • PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELSE body
   14    | IF PARENTHESES_INITIATOR expr • PARENTHESES_TERMINATOR body body
   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    PARENTHESES_TERMINATOR  shift, and go to state 113
    EQUAL                   shift, and go to state 48
    NOT_EQUAL               shift, and go to state 49
    LEQ                     shift, and go to state 50
    GEQ                     shift, and go to state 51
    GREATER_THAN            shift, and go to state 52
    LESS_THAN               shift, and go to state 53
    AND                     shift, and go to state 54
    OR                      shift, and go to state 55
    PLUS_OPERATOR           shift, and go to state 56
    MINUS_OPERATOR          shift, and go to state 57
    MULTI_OPERATOR          shift, and go to state 58
    DIVISION_OPERATOR       shift, and go to state 59
    MOD_OPERATOR            shift, and go to state 60
    POWER_OPERATOR          shift, and go to state 61
    CONCAT                  shift, and go to state 62


State 80

   60 expr: PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR •

    $default  reduce using rule 60 (expr)


State 81

   17 stm: IN PARENTHESES_INITIATOR ID • PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 114


State 82

   64 val: ID •

    $default  reduce using rule 64 (val)


State 83

   22 stm: OPEN PARENTHESES_INITIATOR val • PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 115


State 84

   23 stm: CLOSE PARENTHESES_INITIATOR val • PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 116


State 85

    3 stmlist: stm SEMICOLON stmlist •

    $default  reduce using rule 3 (stmlist)


State 86

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   51     | expr EQUAL expr •
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 51 (expr)


State 87

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   52     | expr NOT_EQUAL expr •
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 52 (expr)


State 88

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   53     | expr LEQ expr •
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 53 (expr)


State 89

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   54     | expr GEQ expr •
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 54 (expr)


State 90

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   56     | expr GREATER_THAN expr •
   58     | expr • AND expr
   59     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 56 (expr)


State 91

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   55     | expr LESS_THAN expr •
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 55 (expr)


State 92

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   58     | expr AND expr •
   59     | expr • OR expr

    EQUAL              shift, and go to state 48
    NOT_EQUAL          shift, and go to state 49
    LEQ                shift, and go to state 50
    GEQ                shift, and go to state 51
    GREATER_THAN       shift, and go to state 52
    LESS_THAN          shift, and go to state 53
    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    $default  reduce using rule 58 (expr)


State 93

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr
   59     | expr OR expr •

    EQUAL              shift, and go to state 48
    NOT_EQUAL          shift, and go to state 49
    LEQ                shift, and go to state 50
    GEQ                shift, and go to state 51
    GREATER_THAN       shift, and go to state 52
    LESS_THAN          shift, and go to state 53
    AND                shift, and go to state 54
    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    $default  reduce using rule 59 (expr)


State 94

   44 expr: expr • PLUS_OPERATOR expr
   44     | expr PLUS_OPERATOR expr •
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    $default  reduce using rule 44 (expr)


State 95

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   45     | expr MINUS_OPERATOR expr •
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    $default  reduce using rule 45 (expr)


State 96

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   46     | expr MULTI_OPERATOR expr •
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    CONCAT  shift, and go to state 62

    $default  reduce using rule 46 (expr)


State 97

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   47     | expr DIVISION_OPERATOR expr •
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    CONCAT  shift, and go to state 62

    $default  reduce using rule 47 (expr)


State 98

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   48     | expr MOD_OPERATOR expr •
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    CONCAT  shift, and go to state 62

    $default  reduce using rule 48 (expr)


State 99

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   49     | expr POWER_OPERATOR expr •
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    CONCAT  shift, and go to state 62

    $default  reduce using rule 49 (expr)


State 100

   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   50     | expr CONCAT expr •
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    CONCAT  error (nonassociative)

    $default  reduce using rule 50 (expr)


State 101

    5 stm: TYPE ID ASSIGN expr •
   31 decl: ID ASSIGN expr • COMMA
   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    COMMA              shift, and go to state 117
    EQUAL              shift, and go to state 48
    NOT_EQUAL          shift, and go to state 49
    LEQ                shift, and go to state 50
    GEQ                shift, and go to state 51
    GREATER_THAN       shift, and go to state 52
    LESS_THAN          shift, and go to state 53
    AND                shift, and go to state 54
    OR                 shift, and go to state 55
    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    $default  reduce using rule 5 (stm)


State 102

   31 decl: ID ASSIGN • expr COMMA

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 118
    attrlist  go to state 23
    val       go to state 24


State 103

    9 stm: DEF TYPE ID PARENTHESES_INITIATOR • paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR

    TYPE  shift, and go to state 119

    $default  reduce using rule 36 (param)

    paramlist  go to state 120
    param      go to state 121


State 104

   21 stm: ARRAY BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR •

    $default  reduce using rule 21 (stm)


State 105

   40 field: TYPE • ID

    ID  shift, and go to state 122


State 106

   19 stm: STRUCT ID BRACES_INITIATOR fieldlist • BRACES_TERMINATOR

    BRACES_TERMINATOR  shift, and go to state 123


State 107

   38 fieldlist: field • SEMICOLON
   39          | field • SEMICOLON fieldlist

    SEMICOLON  shift, and go to state 124


State 108

   33 types: TYPE COMMA • types

    TYPE  shift, and go to state 74

    types  go to state 125


State 109

   20 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR • ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    ID  shift, and go to state 126


State 110

   10 stm: WHILE expr BRACES_INITIATOR stmlist • BRACES_TERMINATOR

    BRACES_TERMINATOR  shift, and go to state 127


State 111

   25 init: TYPE ID • ITERATOR range

    ITERATOR  shift, and go to state 128


State 112

   11 stm: FOR PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR • body

    BRACES_INITIATOR  shift, and go to state 129

    body  go to state 130


State 113

   12 stm: IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR • body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body
   13    | IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR • body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELSE body
   14    | IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR • body body

    BRACES_INITIATOR  shift, and go to state 129

    body  go to state 131


State 114

   17 stm: IN PARENTHESES_INITIATOR ID PARENTHESES_TERMINATOR •

    $default  reduce using rule 17 (stm)


State 115

   22 stm: OPEN PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR •

    $default  reduce using rule 22 (stm)


State 116

   23 stm: CLOSE PARENTHESES_INITIATOR val PARENTHESES_TERMINATOR •

    $default  reduce using rule 23 (stm)


State 117

   31 decl: ID ASSIGN expr COMMA •

    $default  reduce using rule 31 (decl)


State 118

   31 decl: ID ASSIGN expr • COMMA
   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    COMMA              shift, and go to state 117
    EQUAL              shift, and go to state 48
    NOT_EQUAL          shift, and go to state 49
    LEQ                shift, and go to state 50
    GEQ                shift, and go to state 51
    GREATER_THAN       shift, and go to state 52
    LESS_THAN          shift, and go to state 53
    AND                shift, and go to state 54
    OR                 shift, and go to state 55
    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62


State 119

   37 param: TYPE • ID

    ID  shift, and go to state 132


State 120

    9 stm: DEF TYPE ID PARENTHESES_INITIATOR paramlist • PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 133


State 121

   34 paramlist: param •
   35          | param • COMMA paramlist

    COMMA  shift, and go to state 134

    $default  reduce using rule 34 (paramlist)


State 122

   40 field: TYPE ID •

    $default  reduce using rule 40 (field)


State 123

   19 stm: STRUCT ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR •

    $default  reduce using rule 19 (stm)


State 124

   38 fieldlist: field SEMICOLON •
   39          | field SEMICOLON • fieldlist

    TYPE  shift, and go to state 105

    $default  reduce using rule 38 (fieldlist)

    fieldlist  go to state 135
    field      go to state 107


State 125

   33 types: TYPE COMMA types •

    $default  reduce using rule 33 (types)


State 126

   20 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID • ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    ASSIGN  shift, and go to state 136


State 127

   10 stm: WHILE expr BRACES_INITIATOR stmlist BRACES_TERMINATOR •

    $default  reduce using rule 10 (stm)


State 128

   25 init: TYPE ID ITERATOR • range

    ID                  shift, and go to state 137
    BRACKETS_INITIATOR  shift, and go to state 138

    range  go to state 139


State 129

   24 body: BRACES_INITIATOR • stmlist BRACES_TERMINATOR

    ID                     shift, and go to state 1
    TYPE                   shift, and go to state 2
    VALUE                  shift, and go to state 3
    DEF                    shift, and go to state 4
    ARRAY                  shift, and go to state 5
    STRUCT                 shift, and go to state 6
    TUPLE                  shift, and go to state 7
    WHILE                  shift, and go to state 8
    FOR                    shift, and go to state 9
    IF                     shift, and go to state 10
    BREAK                  shift, and go to state 11
    RETURN                 shift, and go to state 12
    PARENTHESES_INITIATOR  shift, and go to state 13
    IN                     shift, and go to state 14
    OUT                    shift, and go to state 15
    OPEN                   shift, and go to state 16
    CLOSE                  shift, and go to state 17
    NOT                    shift, and go to state 18

    stmlist   go to state 140
    stm       go to state 21
    expr      go to state 22
    attrlist  go to state 23
    val       go to state 24


State 130

   11 stm: FOR PARENTHESES_INITIATOR init PARENTHESES_TERMINATOR body •

    $default  reduce using rule 11 (stm)


State 131

   12 stm: IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body • ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body
   13    | IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body • ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELSE body
   14    | IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body • body

    ELIF              shift, and go to state 141
    BRACES_INITIATOR  shift, and go to state 129

    body  go to state 142


State 132

   37 param: TYPE ID •

    $default  reduce using rule 37 (param)


State 133

    9 stm: DEF TYPE ID PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR • BRACES_INITIATOR stmlist BRACES_TERMINATOR

    BRACES_INITIATOR  shift, and go to state 143


State 134

   35 paramlist: param COMMA • paramlist

    TYPE  shift, and go to state 119

    $default  reduce using rule 36 (param)

    paramlist  go to state 144
    param      go to state 121


State 135

   39 fieldlist: field SEMICOLON fieldlist •

    $default  reduce using rule 39 (fieldlist)


State 136

   20 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN • PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 145


State 137

   27 range: ID •

    $default  reduce using rule 27 (range)


State 138

   26 range: BRACKETS_INITIATOR • expr COMMA expr BRACKETS_TERMINATOR

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 146
    attrlist  go to state 23
    val       go to state 24


State 139

   25 init: TYPE ID ITERATOR range •

    $default  reduce using rule 25 (init)


State 140

   24 body: BRACES_INITIATOR stmlist • BRACES_TERMINATOR

    BRACES_TERMINATOR  shift, and go to state 147


State 141

   12 stm: IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF • PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body
   13    | IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF • PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELSE body

    PARENTHESES_INITIATOR  shift, and go to state 148


State 142

   14 stm: IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body body •

    $default  reduce using rule 14 (stm)


State 143

    9 stm: DEF TYPE ID PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR • stmlist BRACES_TERMINATOR

    ID                     shift, and go to state 1
    TYPE                   shift, and go to state 2
    VALUE                  shift, and go to state 3
    DEF                    shift, and go to state 4
    ARRAY                  shift, and go to state 5
    STRUCT                 shift, and go to state 6
    TUPLE                  shift, and go to state 7
    WHILE                  shift, and go to state 8
    FOR                    shift, and go to state 9
    IF                     shift, and go to state 10
    BREAK                  shift, and go to state 11
    RETURN                 shift, and go to state 12
    PARENTHESES_INITIATOR  shift, and go to state 13
    IN                     shift, and go to state 14
    OUT                    shift, and go to state 15
    OPEN                   shift, and go to state 16
    CLOSE                  shift, and go to state 17
    NOT                    shift, and go to state 18

    stmlist   go to state 149
    stm       go to state 21
    expr      go to state 22
    attrlist  go to state 23
    val       go to state 24


State 144

   35 paramlist: param COMMA paramlist •

    $default  reduce using rule 35 (paramlist)


State 145

   20 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR • exprlist PARENTHESES_TERMINATOR

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    exprlist  go to state 150
    expr      go to state 151
    attrlist  go to state 23
    val       go to state 24


State 146

   26 range: BRACKETS_INITIATOR expr • COMMA expr BRACKETS_TERMINATOR
   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    COMMA              shift, and go to state 152
    EQUAL              shift, and go to state 48
    NOT_EQUAL          shift, and go to state 49
    LEQ                shift, and go to state 50
    GEQ                shift, and go to state 51
    GREATER_THAN       shift, and go to state 52
    LESS_THAN          shift, and go to state 53
    AND                shift, and go to state 54
    OR                 shift, and go to state 55
    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62


State 147

   24 body: BRACES_INITIATOR stmlist BRACES_TERMINATOR •

    $default  reduce using rule 24 (body)


State 148

   12 stm: IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR • expr PARENTHESES_TERMINATOR body
   13    | IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR • expr PARENTHESES_TERMINATOR body ELSE body

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 153
    attrlist  go to state 23
    val       go to state 24


State 149

    9 stm: DEF TYPE ID PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist • BRACES_TERMINATOR

    BRACES_TERMINATOR  shift, and go to state 154


State 150

   20 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist • PARENTHESES_TERMINATOR
   42 exprlist: exprlist • COMMA expr

    COMMA                   shift, and go to state 155
    PARENTHESES_TERMINATOR  shift, and go to state 156


State 151

   41 exprlist: expr •
   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    EQUAL              shift, and go to state 48
    NOT_EQUAL          shift, and go to state 49
    LEQ                shift, and go to state 50
    GEQ                shift, and go to state 51
    GREATER_THAN       shift, and go to state 52
    LESS_THAN          shift, and go to state 53
    AND                shift, and go to state 54
    OR                 shift, and go to state 55
    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    $default  reduce using rule 41 (exprlist)


State 152

   26 range: BRACKETS_INITIATOR expr COMMA • expr BRACKETS_TERMINATOR

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 157
    attrlist  go to state 23
    val       go to state 24


State 153

   12 stm: IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr • PARENTHESES_TERMINATOR body
   13    | IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr • PARENTHESES_TERMINATOR body ELSE body
   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    PARENTHESES_TERMINATOR  shift, and go to state 158
    EQUAL                   shift, and go to state 48
    NOT_EQUAL               shift, and go to state 49
    LEQ                     shift, and go to state 50
    GEQ                     shift, and go to state 51
    GREATER_THAN            shift, and go to state 52
    LESS_THAN               shift, and go to state 53
    AND                     shift, and go to state 54
    OR                      shift, and go to state 55
    PLUS_OPERATOR           shift, and go to state 56
    MINUS_OPERATOR          shift, and go to state 57
    MULTI_OPERATOR          shift, and go to state 58
    DIVISION_OPERATOR       shift, and go to state 59
    MOD_OPERATOR            shift, and go to state 60
    POWER_OPERATOR          shift, and go to state 61
    CONCAT                  shift, and go to state 62


State 154

    9 stm: DEF TYPE ID PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR •

    $default  reduce using rule 9 (stm)


State 155

   42 exprlist: exprlist COMMA • expr

    ID                     shift, and go to state 35
    VALUE                  shift, and go to state 3
    PARENTHESES_INITIATOR  shift, and go to state 13
    NOT                    shift, and go to state 18

    expr      go to state 159
    attrlist  go to state 23
    val       go to state 24


State 156

   20 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR •

    $default  reduce using rule 20 (stm)


State 157

   26 range: BRACKETS_INITIATOR expr COMMA expr • BRACKETS_TERMINATOR
   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    BRACKETS_TERMINATOR  shift, and go to state 160
    EQUAL                shift, and go to state 48
    NOT_EQUAL            shift, and go to state 49
    LEQ                  shift, and go to state 50
    GEQ                  shift, and go to state 51
    GREATER_THAN         shift, and go to state 52
    LESS_THAN            shift, and go to state 53
    AND                  shift, and go to state 54
    OR                   shift, and go to state 55
    PLUS_OPERATOR        shift, and go to state 56
    MINUS_OPERATOR       shift, and go to state 57
    MULTI_OPERATOR       shift, and go to state 58
    DIVISION_OPERATOR    shift, and go to state 59
    MOD_OPERATOR         shift, and go to state 60
    POWER_OPERATOR       shift, and go to state 61
    CONCAT               shift, and go to state 62


State 158

   12 stm: IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR • body
   13    | IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR • body ELSE body

    BRACES_INITIATOR  shift, and go to state 129

    body  go to state 161


State 159

   42 exprlist: exprlist COMMA expr •
   44 expr: expr • PLUS_OPERATOR expr
   45     | expr • MINUS_OPERATOR expr
   46     | expr • MULTI_OPERATOR expr
   47     | expr • DIVISION_OPERATOR expr
   48     | expr • MOD_OPERATOR expr
   49     | expr • POWER_OPERATOR expr
   50     | expr • CONCAT expr
   51     | expr • EQUAL expr
   52     | expr • NOT_EQUAL expr
   53     | expr • LEQ expr
   54     | expr • GEQ expr
   55     | expr • LESS_THAN expr
   56     | expr • GREATER_THAN expr
   58     | expr • AND expr
   59     | expr • OR expr

    EQUAL              shift, and go to state 48
    NOT_EQUAL          shift, and go to state 49
    LEQ                shift, and go to state 50
    GEQ                shift, and go to state 51
    GREATER_THAN       shift, and go to state 52
    LESS_THAN          shift, and go to state 53
    AND                shift, and go to state 54
    OR                 shift, and go to state 55
    PLUS_OPERATOR      shift, and go to state 56
    MINUS_OPERATOR     shift, and go to state 57
    MULTI_OPERATOR     shift, and go to state 58
    DIVISION_OPERATOR  shift, and go to state 59
    MOD_OPERATOR       shift, and go to state 60
    POWER_OPERATOR     shift, and go to state 61
    CONCAT             shift, and go to state 62

    $default  reduce using rule 42 (exprlist)


State 160

   26 range: BRACKETS_INITIATOR expr COMMA expr BRACKETS_TERMINATOR •

    $default  reduce using rule 26 (range)


State 161

   12 stm: IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body •
   13    | IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body • ELSE body

    ELSE  shift, and go to state 162

    $default  reduce using rule 12 (stm)


State 162

   13 stm: IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELSE • body

    BRACES_INITIATOR  shift, and go to state 129

    body  go to state 163


State 163

   13 stm: IF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELIF PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR body ELSE body •

    $default  reduce using rule 13 (stm)
