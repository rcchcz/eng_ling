Terminals unused in grammar

    LEN_STRING
    COMMENT
    SEPARATOR
    OPEN
    CLOSE


Grammar

    0 $accept: prog $end

    1 prog: stmlist

    2 stmlist: stm SEMICOLON
    3        | stmlist SEMICOLON stm

    4 stm: TYPE ids
    5    | TYPE ID ASSIGN expr
    6    | ID ASSIGN expr
    7    | ID COPY_STRING expr
    8    | DEF ID PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR
    9    | WHILE expr BRACES_INITIATOR stmlist BRACES_TERMINATOR
   10    | FOR PARENTHESES_INITIATOR TYPE ID ITERATOR BRACKETS_INITIATOR VALUE COMMA VALUE BRACKETS_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR
   11    | FOR PARENTHESES_INITIATOR TYPE ID ITERATOR ID BRACES_INITIATOR stmlist BRACES_TERMINATOR
   12    | IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR
   13    | IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR
   14    | IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE BRACES_INITIATOR stmlist BRACES_TERMINATOR
   15    | IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE stm
   16    | BREAK
   17    | RETURN expr
   18    | IN PARENTHESES_INITIATOR ID PARENTHESES_TERMINATOR
   19    | OUT expr
   20    | STRUCT ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR
   21    | TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR
   22    | ARRAY BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR

   23 ids: ID
   24    | ID COMMA ids

   25 types: TYPE
   26      | TYPE COMMA types

   27 paramlist: ε
   28          | paramlist COMMA param

   29 param: TYPE ID

   30 fieldlist: field
   31          | fieldlist SEMICOLON field

   32 field: TYPE ID

   33 exprlist: expr
   34         | exprlist COMMA expr

   35 expr: val
   36     | expr PLUS_OPERATOR expr
   37     | expr MINUS_OPERATOR expr
   38     | expr MULTI_OPERATOR expr
   39     | expr DIVISION_OPERATOR expr
   40     | expr MOD_OPERATOR expr
   41     | expr POWER_OPERATOR expr
   42     | expr CONCAT expr
   43     | expr EQUAL expr
   44     | expr NOT_EQUAL expr
   45     | expr LEQ expr
   46     | expr GEQ expr
   47     | expr LESS_THAN expr
   48     | expr GREATER_THAN expr
   49     | NOT expr
   50     | expr AND expr
   51     | expr OR expr
   52     | PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR

   53 val: ID
   54    | VALUE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sValue> (258) 5 6 7 8 10 11 18 20 21 23 24 29 32 53
    TYPE <sValue> (259) 4 5 10 11 25 26 29 32
    VALUE <sValue> (260) 10 22 54
    LEN_STRING <sValue> (261)
    ASSIGN (262) 5 6 21
    COMMENT (263)
    COMMA (264) 10 24 26 28 34
    SEMICOLON (265) 2 3 31
    SEPARATOR (266)
    DEF (267) 8
    ARRAY (268) 22
    STRUCT (269) 20
    TUPLE (270) 21
    WHILE (271) 9
    FOR (272) 10 11
    ITERATOR (273) 10 11
    IF (274) 12 13 14 15
    ELSE (275) 14 15
    ELIF (276) 13 14
    BREAK (277) 16
    RETURN (278) 17
    BRACES_INITIATOR (279) 8 9 10 11 12 13 14 15 20
    BRACES_TERMINATOR (280) 8 9 10 11 12 13 14 15 20
    BRACKETS_INITIATOR (281) 10 22
    BRACKETS_TERMINATOR (282) 10 22
    PARENTHESES_INITIATOR (283) 8 10 11 18 21 52
    PARENTHESES_TERMINATOR (284) 8 18 21 52
    IN (285) 18
    OUT (286) 19
    OPEN (287)
    CLOSE (288)
    EQUAL (289) 43
    NOT_EQUAL (290) 44
    LEQ (291) 45
    GEQ (292) 46
    GREATER_THAN (293) 48
    LESS_THAN (294) 47
    NOT (295) 49
    AND (296) 50
    OR (297) 51
    PLUS_OPERATOR (298) 36
    MINUS_OPERATOR (299) 37
    MULTI_OPERATOR (300) 38
    DIVISION_OPERATOR (301) 39
    MOD_OPERATOR (302) 40
    POWER_OPERATOR (303) 41
    CONCAT (304) 42
    COPY_STRING (305) 7


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    prog <sValue> (52)
        on left: 1
        on right: 0
    stmlist <sValue> (53)
        on left: 2 3
        on right: 1 3 8 9 10 11 12 13 14 15
    stm <sValue> (54)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
        on right: 2 3 15
    ids (55)
        on left: 23 24
        on right: 4 24
    types (56)
        on left: 25 26
        on right: 21 26
    paramlist (57)
        on left: 27 28
        on right: 8 28
    param (58)
        on left: 29
        on right: 28
    fieldlist (59)
        on left: 30 31
        on right: 20 31
    field (60)
        on left: 32
        on right: 30 31
    exprlist (61)
        on left: 33 34
        on right: 21 34
    expr (62)
        on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
        on right: 5 6 7 9 12 13 14 15 17 19 33 34 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
    val (63)
        on left: 53 54
        on right: 35


State 0

    0 $accept: • prog $end

    ID      shift, and go to state 1
    TYPE    shift, and go to state 2
    DEF     shift, and go to state 3
    ARRAY   shift, and go to state 4
    STRUCT  shift, and go to state 5
    TUPLE   shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    IF      shift, and go to state 9
    BREAK   shift, and go to state 10
    RETURN  shift, and go to state 11
    IN      shift, and go to state 12
    OUT     shift, and go to state 13

    prog     go to state 14
    stmlist  go to state 15
    stm      go to state 16


State 1

    6 stm: ID • ASSIGN expr
    7    | ID • COPY_STRING expr

    ASSIGN       shift, and go to state 17
    COPY_STRING  shift, and go to state 18


State 2

    4 stm: TYPE • ids
    5    | TYPE • ID ASSIGN expr

    ID  shift, and go to state 19

    ids  go to state 20


State 3

    8 stm: DEF • ID PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR

    ID  shift, and go to state 21


State 4

   22 stm: ARRAY • BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR

    BRACKETS_INITIATOR  shift, and go to state 22


State 5

   20 stm: STRUCT • ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR

    ID  shift, and go to state 23


State 6

   21 stm: TUPLE • PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 24


State 7

    9 stm: WHILE • expr BRACES_INITIATOR stmlist BRACES_TERMINATOR

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 29
    val   go to state 30


State 8

   10 stm: FOR • PARENTHESES_INITIATOR TYPE ID ITERATOR BRACKETS_INITIATOR VALUE COMMA VALUE BRACKETS_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR
   11    | FOR • PARENTHESES_INITIATOR TYPE ID ITERATOR ID BRACES_INITIATOR stmlist BRACES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 31


State 9

   12 stm: IF • expr BRACES_INITIATOR stmlist BRACES_TERMINATOR
   13    | IF • expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR
   14    | IF • expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE BRACES_INITIATOR stmlist BRACES_TERMINATOR
   15    | IF • expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE stm

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 32
    val   go to state 30


State 10

   16 stm: BREAK •

    $default  reduce using rule 16 (stm)


State 11

   17 stm: RETURN • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 33
    val   go to state 30


State 12

   18 stm: IN • PARENTHESES_INITIATOR ID PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 34


State 13

   19 stm: OUT • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 35
    val   go to state 30


State 14

    0 $accept: prog • $end

    $end  shift, and go to state 36


State 15

    1 prog: stmlist •
    3 stmlist: stmlist • SEMICOLON stm

    SEMICOLON  shift, and go to state 37

    $default  reduce using rule 1 (prog)


State 16

    2 stmlist: stm • SEMICOLON

    SEMICOLON  shift, and go to state 38


State 17

    6 stm: ID ASSIGN • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 39
    val   go to state 30


State 18

    7 stm: ID COPY_STRING • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 40
    val   go to state 30


State 19

    5 stm: TYPE ID • ASSIGN expr
   23 ids: ID •
   24    | ID • COMMA ids

    ASSIGN  shift, and go to state 41
    COMMA   shift, and go to state 42

    $default  reduce using rule 23 (ids)


State 20

    4 stm: TYPE ids •

    $default  reduce using rule 4 (stm)


State 21

    8 stm: DEF ID • PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 43


State 22

   22 stm: ARRAY BRACKETS_INITIATOR • VALUE BRACKETS_TERMINATOR

    VALUE  shift, and go to state 44


State 23

   20 stm: STRUCT ID • BRACES_INITIATOR fieldlist BRACES_TERMINATOR

    BRACES_INITIATOR  shift, and go to state 45


State 24

   21 stm: TUPLE PARENTHESES_INITIATOR • types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    TYPE  shift, and go to state 46

    types  go to state 47


State 25

   53 val: ID •

    $default  reduce using rule 53 (val)


State 26

   54 val: VALUE •

    $default  reduce using rule 54 (val)


State 27

   52 expr: PARENTHESES_INITIATOR • expr PARENTHESES_TERMINATOR

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 48
    val   go to state 30


State 28

   49 expr: NOT • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 49
    val   go to state 30


State 29

    9 stm: WHILE expr • BRACES_INITIATOR stmlist BRACES_TERMINATOR
   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    BRACES_INITIATOR   shift, and go to state 50
    EQUAL              shift, and go to state 51
    NOT_EQUAL          shift, and go to state 52
    LEQ                shift, and go to state 53
    GEQ                shift, and go to state 54
    GREATER_THAN       shift, and go to state 55
    LESS_THAN          shift, and go to state 56
    AND                shift, and go to state 57
    OR                 shift, and go to state 58
    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65


State 30

   35 expr: val •

    $default  reduce using rule 35 (expr)


State 31

   10 stm: FOR PARENTHESES_INITIATOR • TYPE ID ITERATOR BRACKETS_INITIATOR VALUE COMMA VALUE BRACKETS_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR
   11    | FOR PARENTHESES_INITIATOR • TYPE ID ITERATOR ID BRACES_INITIATOR stmlist BRACES_TERMINATOR

    TYPE  shift, and go to state 66


State 32

   12 stm: IF expr • BRACES_INITIATOR stmlist BRACES_TERMINATOR
   13    | IF expr • BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR
   14    | IF expr • BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE BRACES_INITIATOR stmlist BRACES_TERMINATOR
   15    | IF expr • BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE stm
   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    BRACES_INITIATOR   shift, and go to state 67
    EQUAL              shift, and go to state 51
    NOT_EQUAL          shift, and go to state 52
    LEQ                shift, and go to state 53
    GEQ                shift, and go to state 54
    GREATER_THAN       shift, and go to state 55
    LESS_THAN          shift, and go to state 56
    AND                shift, and go to state 57
    OR                 shift, and go to state 58
    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65


State 33

   17 stm: RETURN expr •
   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    EQUAL              shift, and go to state 51
    NOT_EQUAL          shift, and go to state 52
    LEQ                shift, and go to state 53
    GEQ                shift, and go to state 54
    GREATER_THAN       shift, and go to state 55
    LESS_THAN          shift, and go to state 56
    AND                shift, and go to state 57
    OR                 shift, and go to state 58
    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    $default  reduce using rule 17 (stm)


State 34

   18 stm: IN PARENTHESES_INITIATOR • ID PARENTHESES_TERMINATOR

    ID  shift, and go to state 68


State 35

   19 stm: OUT expr •
   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    EQUAL              shift, and go to state 51
    NOT_EQUAL          shift, and go to state 52
    LEQ                shift, and go to state 53
    GEQ                shift, and go to state 54
    GREATER_THAN       shift, and go to state 55
    LESS_THAN          shift, and go to state 56
    AND                shift, and go to state 57
    OR                 shift, and go to state 58
    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    $default  reduce using rule 19 (stm)


State 36

    0 $accept: prog $end •

    $default  accept


State 37

    3 stmlist: stmlist SEMICOLON • stm

    ID      shift, and go to state 1
    TYPE    shift, and go to state 2
    DEF     shift, and go to state 3
    ARRAY   shift, and go to state 4
    STRUCT  shift, and go to state 5
    TUPLE   shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    IF      shift, and go to state 9
    BREAK   shift, and go to state 10
    RETURN  shift, and go to state 11
    IN      shift, and go to state 12
    OUT     shift, and go to state 13

    stm  go to state 69


State 38

    2 stmlist: stm SEMICOLON •

    $default  reduce using rule 2 (stmlist)


State 39

    6 stm: ID ASSIGN expr •
   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    EQUAL              shift, and go to state 51
    NOT_EQUAL          shift, and go to state 52
    LEQ                shift, and go to state 53
    GEQ                shift, and go to state 54
    GREATER_THAN       shift, and go to state 55
    LESS_THAN          shift, and go to state 56
    AND                shift, and go to state 57
    OR                 shift, and go to state 58
    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    $default  reduce using rule 6 (stm)


State 40

    7 stm: ID COPY_STRING expr •
   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    EQUAL              shift, and go to state 51
    NOT_EQUAL          shift, and go to state 52
    LEQ                shift, and go to state 53
    GEQ                shift, and go to state 54
    GREATER_THAN       shift, and go to state 55
    LESS_THAN          shift, and go to state 56
    AND                shift, and go to state 57
    OR                 shift, and go to state 58
    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    $default  reduce using rule 7 (stm)


State 41

    5 stm: TYPE ID ASSIGN • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 70
    val   go to state 30


State 42

   24 ids: ID COMMA • ids

    ID  shift, and go to state 71

    ids  go to state 72


State 43

    8 stm: DEF ID PARENTHESES_INITIATOR • paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR

    $default  reduce using rule 27 (paramlist)

    paramlist  go to state 73


State 44

   22 stm: ARRAY BRACKETS_INITIATOR VALUE • BRACKETS_TERMINATOR

    BRACKETS_TERMINATOR  shift, and go to state 74


State 45

   20 stm: STRUCT ID BRACES_INITIATOR • fieldlist BRACES_TERMINATOR

    TYPE  shift, and go to state 75

    fieldlist  go to state 76
    field      go to state 77


State 46

   25 types: TYPE •
   26      | TYPE • COMMA types

    COMMA  shift, and go to state 78

    $default  reduce using rule 25 (types)


State 47

   21 stm: TUPLE PARENTHESES_INITIATOR types • PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 79


State 48

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr
   52     | PARENTHESES_INITIATOR expr • PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 80
    EQUAL                   shift, and go to state 51
    NOT_EQUAL               shift, and go to state 52
    LEQ                     shift, and go to state 53
    GEQ                     shift, and go to state 54
    GREATER_THAN            shift, and go to state 55
    LESS_THAN               shift, and go to state 56
    AND                     shift, and go to state 57
    OR                      shift, and go to state 58
    PLUS_OPERATOR           shift, and go to state 59
    MINUS_OPERATOR          shift, and go to state 60
    MULTI_OPERATOR          shift, and go to state 61
    DIVISION_OPERATOR       shift, and go to state 62
    MOD_OPERATOR            shift, and go to state 63
    POWER_OPERATOR          shift, and go to state 64
    CONCAT                  shift, and go to state 65


State 49

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   49     | NOT expr •
   50     | expr • AND expr
   51     | expr • OR expr

    EQUAL              shift, and go to state 51
    NOT_EQUAL          shift, and go to state 52
    LEQ                shift, and go to state 53
    GEQ                shift, and go to state 54
    GREATER_THAN       shift, and go to state 55
    LESS_THAN          shift, and go to state 56
    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    $default  reduce using rule 49 (expr)


State 50

    9 stm: WHILE expr BRACES_INITIATOR • stmlist BRACES_TERMINATOR

    ID      shift, and go to state 1
    TYPE    shift, and go to state 2
    DEF     shift, and go to state 3
    ARRAY   shift, and go to state 4
    STRUCT  shift, and go to state 5
    TUPLE   shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    IF      shift, and go to state 9
    BREAK   shift, and go to state 10
    RETURN  shift, and go to state 11
    IN      shift, and go to state 12
    OUT     shift, and go to state 13

    stmlist  go to state 81
    stm      go to state 16


State 51

   43 expr: expr EQUAL • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 82
    val   go to state 30


State 52

   44 expr: expr NOT_EQUAL • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 83
    val   go to state 30


State 53

   45 expr: expr LEQ • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 84
    val   go to state 30


State 54

   46 expr: expr GEQ • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 85
    val   go to state 30


State 55

   48 expr: expr GREATER_THAN • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 86
    val   go to state 30


State 56

   47 expr: expr LESS_THAN • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 87
    val   go to state 30


State 57

   50 expr: expr AND • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 88
    val   go to state 30


State 58

   51 expr: expr OR • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 89
    val   go to state 30


State 59

   36 expr: expr PLUS_OPERATOR • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 90
    val   go to state 30


State 60

   37 expr: expr MINUS_OPERATOR • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 91
    val   go to state 30


State 61

   38 expr: expr MULTI_OPERATOR • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 92
    val   go to state 30


State 62

   39 expr: expr DIVISION_OPERATOR • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 93
    val   go to state 30


State 63

   40 expr: expr MOD_OPERATOR • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 94
    val   go to state 30


State 64

   41 expr: expr POWER_OPERATOR • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 95
    val   go to state 30


State 65

   42 expr: expr CONCAT • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 96
    val   go to state 30


State 66

   10 stm: FOR PARENTHESES_INITIATOR TYPE • ID ITERATOR BRACKETS_INITIATOR VALUE COMMA VALUE BRACKETS_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR
   11    | FOR PARENTHESES_INITIATOR TYPE • ID ITERATOR ID BRACES_INITIATOR stmlist BRACES_TERMINATOR

    ID  shift, and go to state 97


State 67

   12 stm: IF expr BRACES_INITIATOR • stmlist BRACES_TERMINATOR
   13    | IF expr BRACES_INITIATOR • stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR
   14    | IF expr BRACES_INITIATOR • stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE BRACES_INITIATOR stmlist BRACES_TERMINATOR
   15    | IF expr BRACES_INITIATOR • stmlist BRACES_TERMINATOR ELSE stm

    ID      shift, and go to state 1
    TYPE    shift, and go to state 2
    DEF     shift, and go to state 3
    ARRAY   shift, and go to state 4
    STRUCT  shift, and go to state 5
    TUPLE   shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    IF      shift, and go to state 9
    BREAK   shift, and go to state 10
    RETURN  shift, and go to state 11
    IN      shift, and go to state 12
    OUT     shift, and go to state 13

    stmlist  go to state 98
    stm      go to state 16


State 68

   18 stm: IN PARENTHESES_INITIATOR ID • PARENTHESES_TERMINATOR

    PARENTHESES_TERMINATOR  shift, and go to state 99


State 69

    3 stmlist: stmlist SEMICOLON stm •

    $default  reduce using rule 3 (stmlist)


State 70

    5 stm: TYPE ID ASSIGN expr •
   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    EQUAL              shift, and go to state 51
    NOT_EQUAL          shift, and go to state 52
    LEQ                shift, and go to state 53
    GEQ                shift, and go to state 54
    GREATER_THAN       shift, and go to state 55
    LESS_THAN          shift, and go to state 56
    AND                shift, and go to state 57
    OR                 shift, and go to state 58
    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    $default  reduce using rule 5 (stm)


State 71

   23 ids: ID •
   24    | ID • COMMA ids

    COMMA  shift, and go to state 42

    $default  reduce using rule 23 (ids)


State 72

   24 ids: ID COMMA ids •

    $default  reduce using rule 24 (ids)


State 73

    8 stm: DEF ID PARENTHESES_INITIATOR paramlist • PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR
   28 paramlist: paramlist • COMMA param

    COMMA                   shift, and go to state 100
    PARENTHESES_TERMINATOR  shift, and go to state 101


State 74

   22 stm: ARRAY BRACKETS_INITIATOR VALUE BRACKETS_TERMINATOR •

    $default  reduce using rule 22 (stm)


State 75

   32 field: TYPE • ID

    ID  shift, and go to state 102


State 76

   20 stm: STRUCT ID BRACES_INITIATOR fieldlist • BRACES_TERMINATOR
   31 fieldlist: fieldlist • SEMICOLON field

    SEMICOLON          shift, and go to state 103
    BRACES_TERMINATOR  shift, and go to state 104


State 77

   30 fieldlist: field •

    $default  reduce using rule 30 (fieldlist)


State 78

   26 types: TYPE COMMA • types

    TYPE  shift, and go to state 46

    types  go to state 105


State 79

   21 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR • ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    ID  shift, and go to state 106


State 80

   52 expr: PARENTHESES_INITIATOR expr PARENTHESES_TERMINATOR •

    $default  reduce using rule 52 (expr)


State 81

    3 stmlist: stmlist • SEMICOLON stm
    9 stm: WHILE expr BRACES_INITIATOR stmlist • BRACES_TERMINATOR

    SEMICOLON          shift, and go to state 37
    BRACES_TERMINATOR  shift, and go to state 107


State 82

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   43     | expr EQUAL expr •
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 43 (expr)


State 83

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   44     | expr NOT_EQUAL expr •
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 44 (expr)


State 84

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   45     | expr LEQ expr •
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 45 (expr)


State 85

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   46     | expr GEQ expr •
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 46 (expr)


State 86

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   48     | expr GREATER_THAN expr •
   50     | expr • AND expr
   51     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 48 (expr)


State 87

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   47     | expr LESS_THAN expr •
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    EQUAL         error (nonassociative)
    NOT_EQUAL     error (nonassociative)
    LEQ           error (nonassociative)
    GEQ           error (nonassociative)
    GREATER_THAN  error (nonassociative)
    LESS_THAN     error (nonassociative)

    $default  reduce using rule 47 (expr)


State 88

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   50     | expr AND expr •
   51     | expr • OR expr

    EQUAL              shift, and go to state 51
    NOT_EQUAL          shift, and go to state 52
    LEQ                shift, and go to state 53
    GEQ                shift, and go to state 54
    GREATER_THAN       shift, and go to state 55
    LESS_THAN          shift, and go to state 56
    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    $default  reduce using rule 50 (expr)


State 89

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr
   51     | expr OR expr •

    EQUAL              shift, and go to state 51
    NOT_EQUAL          shift, and go to state 52
    LEQ                shift, and go to state 53
    GEQ                shift, and go to state 54
    GREATER_THAN       shift, and go to state 55
    LESS_THAN          shift, and go to state 56
    AND                shift, and go to state 57
    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    $default  reduce using rule 51 (expr)


State 90

   36 expr: expr • PLUS_OPERATOR expr
   36     | expr PLUS_OPERATOR expr •
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    $default  reduce using rule 36 (expr)


State 91

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   37     | expr MINUS_OPERATOR expr •
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    $default  reduce using rule 37 (expr)


State 92

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   38     | expr MULTI_OPERATOR expr •
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    CONCAT  shift, and go to state 65

    $default  reduce using rule 38 (expr)


State 93

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   39     | expr DIVISION_OPERATOR expr •
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    CONCAT  shift, and go to state 65

    $default  reduce using rule 39 (expr)


State 94

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   40     | expr MOD_OPERATOR expr •
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    CONCAT  shift, and go to state 65

    $default  reduce using rule 40 (expr)


State 95

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   41     | expr POWER_OPERATOR expr •
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    CONCAT  shift, and go to state 65

    $default  reduce using rule 41 (expr)


State 96

   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   42     | expr CONCAT expr •
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    CONCAT  error (nonassociative)

    $default  reduce using rule 42 (expr)


State 97

   10 stm: FOR PARENTHESES_INITIATOR TYPE ID • ITERATOR BRACKETS_INITIATOR VALUE COMMA VALUE BRACKETS_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR
   11    | FOR PARENTHESES_INITIATOR TYPE ID • ITERATOR ID BRACES_INITIATOR stmlist BRACES_TERMINATOR

    ITERATOR  shift, and go to state 108


State 98

    3 stmlist: stmlist • SEMICOLON stm
   12 stm: IF expr BRACES_INITIATOR stmlist • BRACES_TERMINATOR
   13    | IF expr BRACES_INITIATOR stmlist • BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR
   14    | IF expr BRACES_INITIATOR stmlist • BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE BRACES_INITIATOR stmlist BRACES_TERMINATOR
   15    | IF expr BRACES_INITIATOR stmlist • BRACES_TERMINATOR ELSE stm

    SEMICOLON          shift, and go to state 37
    BRACES_TERMINATOR  shift, and go to state 109


State 99

   18 stm: IN PARENTHESES_INITIATOR ID PARENTHESES_TERMINATOR •

    $default  reduce using rule 18 (stm)


State 100

   28 paramlist: paramlist COMMA • param

    TYPE  shift, and go to state 110

    param  go to state 111


State 101

    8 stm: DEF ID PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR • BRACES_INITIATOR stmlist BRACES_TERMINATOR

    BRACES_INITIATOR  shift, and go to state 112


State 102

   32 field: TYPE ID •

    $default  reduce using rule 32 (field)


State 103

   31 fieldlist: fieldlist SEMICOLON • field

    TYPE  shift, and go to state 75

    field  go to state 113


State 104

   20 stm: STRUCT ID BRACES_INITIATOR fieldlist BRACES_TERMINATOR •

    $default  reduce using rule 20 (stm)


State 105

   26 types: TYPE COMMA types •

    $default  reduce using rule 26 (types)


State 106

   21 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID • ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    ASSIGN  shift, and go to state 114


State 107

    9 stm: WHILE expr BRACES_INITIATOR stmlist BRACES_TERMINATOR •

    $default  reduce using rule 9 (stm)


State 108

   10 stm: FOR PARENTHESES_INITIATOR TYPE ID ITERATOR • BRACKETS_INITIATOR VALUE COMMA VALUE BRACKETS_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR
   11    | FOR PARENTHESES_INITIATOR TYPE ID ITERATOR • ID BRACES_INITIATOR stmlist BRACES_TERMINATOR

    ID                  shift, and go to state 115
    BRACKETS_INITIATOR  shift, and go to state 116


State 109

   12 stm: IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR •
   13    | IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR • ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR
   14    | IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR • ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE BRACES_INITIATOR stmlist BRACES_TERMINATOR
   15    | IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR • ELSE stm

    ELSE  shift, and go to state 117
    ELIF  shift, and go to state 118

    $default  reduce using rule 12 (stm)


State 110

   29 param: TYPE • ID

    ID  shift, and go to state 119


State 111

   28 paramlist: paramlist COMMA param •

    $default  reduce using rule 28 (paramlist)


State 112

    8 stm: DEF ID PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR • stmlist BRACES_TERMINATOR

    ID      shift, and go to state 1
    TYPE    shift, and go to state 2
    DEF     shift, and go to state 3
    ARRAY   shift, and go to state 4
    STRUCT  shift, and go to state 5
    TUPLE   shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    IF      shift, and go to state 9
    BREAK   shift, and go to state 10
    RETURN  shift, and go to state 11
    IN      shift, and go to state 12
    OUT     shift, and go to state 13

    stmlist  go to state 120
    stm      go to state 16


State 113

   31 fieldlist: fieldlist SEMICOLON field •

    $default  reduce using rule 31 (fieldlist)


State 114

   21 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN • PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR

    PARENTHESES_INITIATOR  shift, and go to state 121


State 115

   11 stm: FOR PARENTHESES_INITIATOR TYPE ID ITERATOR ID • BRACES_INITIATOR stmlist BRACES_TERMINATOR

    BRACES_INITIATOR  shift, and go to state 122


State 116

   10 stm: FOR PARENTHESES_INITIATOR TYPE ID ITERATOR BRACKETS_INITIATOR • VALUE COMMA VALUE BRACKETS_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR

    VALUE  shift, and go to state 123


State 117

   15 stm: IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE • stm

    ID      shift, and go to state 1
    TYPE    shift, and go to state 2
    DEF     shift, and go to state 3
    ARRAY   shift, and go to state 4
    STRUCT  shift, and go to state 5
    TUPLE   shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    IF      shift, and go to state 9
    BREAK   shift, and go to state 10
    RETURN  shift, and go to state 11
    IN      shift, and go to state 12
    OUT     shift, and go to state 13

    stm  go to state 124


State 118

   13 stm: IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF • expr BRACES_INITIATOR stmlist BRACES_TERMINATOR
   14    | IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF • expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE BRACES_INITIATOR stmlist BRACES_TERMINATOR

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 125
    val   go to state 30


State 119

   29 param: TYPE ID •

    $default  reduce using rule 29 (param)


State 120

    3 stmlist: stmlist • SEMICOLON stm
    8 stm: DEF ID PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist • BRACES_TERMINATOR

    SEMICOLON          shift, and go to state 37
    BRACES_TERMINATOR  shift, and go to state 126


State 121

   21 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR • exprlist PARENTHESES_TERMINATOR

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    exprlist  go to state 127
    expr      go to state 128
    val       go to state 30


State 122

   11 stm: FOR PARENTHESES_INITIATOR TYPE ID ITERATOR ID BRACES_INITIATOR • stmlist BRACES_TERMINATOR

    ID      shift, and go to state 1
    TYPE    shift, and go to state 2
    DEF     shift, and go to state 3
    ARRAY   shift, and go to state 4
    STRUCT  shift, and go to state 5
    TUPLE   shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    IF      shift, and go to state 9
    BREAK   shift, and go to state 10
    RETURN  shift, and go to state 11
    IN      shift, and go to state 12
    OUT     shift, and go to state 13

    stmlist  go to state 129
    stm      go to state 16


State 123

   10 stm: FOR PARENTHESES_INITIATOR TYPE ID ITERATOR BRACKETS_INITIATOR VALUE • COMMA VALUE BRACKETS_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR

    COMMA  shift, and go to state 130


State 124

   15 stm: IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE stm •

    $default  reduce using rule 15 (stm)


State 125

   13 stm: IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr • BRACES_INITIATOR stmlist BRACES_TERMINATOR
   14    | IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr • BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE BRACES_INITIATOR stmlist BRACES_TERMINATOR
   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    BRACES_INITIATOR   shift, and go to state 131
    EQUAL              shift, and go to state 51
    NOT_EQUAL          shift, and go to state 52
    LEQ                shift, and go to state 53
    GEQ                shift, and go to state 54
    GREATER_THAN       shift, and go to state 55
    LESS_THAN          shift, and go to state 56
    AND                shift, and go to state 57
    OR                 shift, and go to state 58
    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65


State 126

    8 stm: DEF ID PARENTHESES_INITIATOR paramlist PARENTHESES_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR •

    $default  reduce using rule 8 (stm)


State 127

   21 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist • PARENTHESES_TERMINATOR
   34 exprlist: exprlist • COMMA expr

    COMMA                   shift, and go to state 132
    PARENTHESES_TERMINATOR  shift, and go to state 133


State 128

   33 exprlist: expr •
   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    EQUAL              shift, and go to state 51
    NOT_EQUAL          shift, and go to state 52
    LEQ                shift, and go to state 53
    GEQ                shift, and go to state 54
    GREATER_THAN       shift, and go to state 55
    LESS_THAN          shift, and go to state 56
    AND                shift, and go to state 57
    OR                 shift, and go to state 58
    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    $default  reduce using rule 33 (exprlist)


State 129

    3 stmlist: stmlist • SEMICOLON stm
   11 stm: FOR PARENTHESES_INITIATOR TYPE ID ITERATOR ID BRACES_INITIATOR stmlist • BRACES_TERMINATOR

    SEMICOLON          shift, and go to state 37
    BRACES_TERMINATOR  shift, and go to state 134


State 130

   10 stm: FOR PARENTHESES_INITIATOR TYPE ID ITERATOR BRACKETS_INITIATOR VALUE COMMA • VALUE BRACKETS_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR

    VALUE  shift, and go to state 135


State 131

   13 stm: IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR • stmlist BRACES_TERMINATOR
   14    | IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR • stmlist BRACES_TERMINATOR ELSE BRACES_INITIATOR stmlist BRACES_TERMINATOR

    ID      shift, and go to state 1
    TYPE    shift, and go to state 2
    DEF     shift, and go to state 3
    ARRAY   shift, and go to state 4
    STRUCT  shift, and go to state 5
    TUPLE   shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    IF      shift, and go to state 9
    BREAK   shift, and go to state 10
    RETURN  shift, and go to state 11
    IN      shift, and go to state 12
    OUT     shift, and go to state 13

    stmlist  go to state 136
    stm      go to state 16


State 132

   34 exprlist: exprlist COMMA • expr

    ID                     shift, and go to state 25
    VALUE                  shift, and go to state 26
    PARENTHESES_INITIATOR  shift, and go to state 27
    NOT                    shift, and go to state 28

    expr  go to state 137
    val   go to state 30


State 133

   21 stm: TUPLE PARENTHESES_INITIATOR types PARENTHESES_TERMINATOR ID ASSIGN PARENTHESES_INITIATOR exprlist PARENTHESES_TERMINATOR •

    $default  reduce using rule 21 (stm)


State 134

   11 stm: FOR PARENTHESES_INITIATOR TYPE ID ITERATOR ID BRACES_INITIATOR stmlist BRACES_TERMINATOR •

    $default  reduce using rule 11 (stm)


State 135

   10 stm: FOR PARENTHESES_INITIATOR TYPE ID ITERATOR BRACKETS_INITIATOR VALUE COMMA VALUE • BRACKETS_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR

    BRACKETS_TERMINATOR  shift, and go to state 138


State 136

    3 stmlist: stmlist • SEMICOLON stm
   13 stm: IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist • BRACES_TERMINATOR
   14    | IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist • BRACES_TERMINATOR ELSE BRACES_INITIATOR stmlist BRACES_TERMINATOR

    SEMICOLON          shift, and go to state 37
    BRACES_TERMINATOR  shift, and go to state 139


State 137

   34 exprlist: exprlist COMMA expr •
   36 expr: expr • PLUS_OPERATOR expr
   37     | expr • MINUS_OPERATOR expr
   38     | expr • MULTI_OPERATOR expr
   39     | expr • DIVISION_OPERATOR expr
   40     | expr • MOD_OPERATOR expr
   41     | expr • POWER_OPERATOR expr
   42     | expr • CONCAT expr
   43     | expr • EQUAL expr
   44     | expr • NOT_EQUAL expr
   45     | expr • LEQ expr
   46     | expr • GEQ expr
   47     | expr • LESS_THAN expr
   48     | expr • GREATER_THAN expr
   50     | expr • AND expr
   51     | expr • OR expr

    EQUAL              shift, and go to state 51
    NOT_EQUAL          shift, and go to state 52
    LEQ                shift, and go to state 53
    GEQ                shift, and go to state 54
    GREATER_THAN       shift, and go to state 55
    LESS_THAN          shift, and go to state 56
    AND                shift, and go to state 57
    OR                 shift, and go to state 58
    PLUS_OPERATOR      shift, and go to state 59
    MINUS_OPERATOR     shift, and go to state 60
    MULTI_OPERATOR     shift, and go to state 61
    DIVISION_OPERATOR  shift, and go to state 62
    MOD_OPERATOR       shift, and go to state 63
    POWER_OPERATOR     shift, and go to state 64
    CONCAT             shift, and go to state 65

    $default  reduce using rule 34 (exprlist)


State 138

   10 stm: FOR PARENTHESES_INITIATOR TYPE ID ITERATOR BRACKETS_INITIATOR VALUE COMMA VALUE BRACKETS_TERMINATOR • BRACES_INITIATOR stmlist BRACES_TERMINATOR

    BRACES_INITIATOR  shift, and go to state 140


State 139

   13 stm: IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR •
   14    | IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR • ELSE BRACES_INITIATOR stmlist BRACES_TERMINATOR

    ELSE  shift, and go to state 141

    $default  reduce using rule 13 (stm)


State 140

   10 stm: FOR PARENTHESES_INITIATOR TYPE ID ITERATOR BRACKETS_INITIATOR VALUE COMMA VALUE BRACKETS_TERMINATOR BRACES_INITIATOR • stmlist BRACES_TERMINATOR

    ID      shift, and go to state 1
    TYPE    shift, and go to state 2
    DEF     shift, and go to state 3
    ARRAY   shift, and go to state 4
    STRUCT  shift, and go to state 5
    TUPLE   shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    IF      shift, and go to state 9
    BREAK   shift, and go to state 10
    RETURN  shift, and go to state 11
    IN      shift, and go to state 12
    OUT     shift, and go to state 13

    stmlist  go to state 142
    stm      go to state 16


State 141

   14 stm: IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE • BRACES_INITIATOR stmlist BRACES_TERMINATOR

    BRACES_INITIATOR  shift, and go to state 143


State 142

    3 stmlist: stmlist • SEMICOLON stm
   10 stm: FOR PARENTHESES_INITIATOR TYPE ID ITERATOR BRACKETS_INITIATOR VALUE COMMA VALUE BRACKETS_TERMINATOR BRACES_INITIATOR stmlist • BRACES_TERMINATOR

    SEMICOLON          shift, and go to state 37
    BRACES_TERMINATOR  shift, and go to state 144


State 143

   14 stm: IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE BRACES_INITIATOR • stmlist BRACES_TERMINATOR

    ID      shift, and go to state 1
    TYPE    shift, and go to state 2
    DEF     shift, and go to state 3
    ARRAY   shift, and go to state 4
    STRUCT  shift, and go to state 5
    TUPLE   shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    IF      shift, and go to state 9
    BREAK   shift, and go to state 10
    RETURN  shift, and go to state 11
    IN      shift, and go to state 12
    OUT     shift, and go to state 13

    stmlist  go to state 145
    stm      go to state 16


State 144

   10 stm: FOR PARENTHESES_INITIATOR TYPE ID ITERATOR BRACKETS_INITIATOR VALUE COMMA VALUE BRACKETS_TERMINATOR BRACES_INITIATOR stmlist BRACES_TERMINATOR •

    $default  reduce using rule 10 (stm)


State 145

    3 stmlist: stmlist • SEMICOLON stm
   14 stm: IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE BRACES_INITIATOR stmlist • BRACES_TERMINATOR

    SEMICOLON          shift, and go to state 37
    BRACES_TERMINATOR  shift, and go to state 146


State 146

   14 stm: IF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELIF expr BRACES_INITIATOR stmlist BRACES_TERMINATOR ELSE BRACES_INITIATOR stmlist BRACES_TERMINATOR •

    $default  reduce using rule 14 (stm)
